function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,n){for(var r=0;r<n.length;r++){var s=n[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(n,r,s){return r&&e(n.prototype,r),s&&e(n,s),n}}();!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("lodash")):"function"==typeof define&&define.amd?define(["lodash"],n):e.AuthRocket=n(e._)}(this,function(e){"use strict";var n="default"in e?e["default"]:e,r={envName:"local",accountId:process.env.AUTHROCKET_ACCOUNT_ID,apiKey:process.env.AUTHROCKET_API_KEY,realmId:process.env.AUTHROCKET_REALM_ID,jwtSecret:process.env.AUTHROCKET_JWT_SECRET,urls:{api:process.env.AUTHROCKET_API_URL||"https://api-e1.authrocket.com/v1/",login:process.env.AUTHROCKET_LOGIN_URL,signup:process.env.AUTHROCKET_SIGNUP_URL,jslib:process.env.AUTHROCKET_JSLIB_URL}},s=null,t=function u(){return _classCallCheck(this,u),s||(s=this),e.merge(s,r)},o=new t,i=function(){function e(r){_classCallCheck(this,e),r&&n.isString(r)?this.apiUrl=r:(this.apiUrl=n.has(r,"apiUrl")?r.apiUrl:o.urls.api,this.apiKey=n.has(r,"apiKey")?r.apiKey:o.apiKey,this.accountId=n.has(r,"accountId")?r.accountId:o.accountId,this.realmId=n.has(r,"realmId")?r.realmId:o.realmId,this.jsApiUrl=n.has(r,"jsApiUrl")?r.urls.jslib:o.urls.jslib,this.signupUrl=n.has(r,"signupUrl")?r.urls.signup:o.urls.signup||o.urls.api)}return _createClass(e,[{key:"login",value:function(e){return this.requestWithHeaders("login",e).then(function(e){return console.log("successful login",e),e},function(e){return console.error("Error logging in.",e),Promise.reject(e)})}},{key:"logout",value:function(e){return this.requestWithHeaders("logout",{token:e}).then(function(e){return console.log("successful logout",e),e},function(e){return console.error("Error logging out.",e),Promise.reject(e)})}},{key:"signup",value:function(e){return this.requestWithHeaders(this.jsApiUrl+"signup",e).then(function(e){return console.log("successful signup",e),e},function(e){return console.error("Error signing up.",e),Promise.reject(e)})}},{key:"verify",value:function(e){return this.requestWithHeaders("sessions/"+e).then(function(e){return console.log("token is valid",e),e},function(e){return console.error("Token is invalid.",e),Promise.reject(e)})}},{key:"requestWithHeaders",value:function(e,n){}}]),e}();return i});
//# sourceMappingURL=authrocket.min.js.map
