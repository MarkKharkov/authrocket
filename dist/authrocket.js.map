{"version":3,"sources":["authrocket.js"],"names":[],"mappings":"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","file":"authrocket.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('request-promise'), require('lodash')) :\n\ttypeof define === 'function' && define.amd ? define(['request-promise', 'lodash'], factory) :\n\tglobal.AuthRocket = factory(global.request,global._);\n}(this, function (request,_) { 'use strict';\n\n\trequest = 'default' in request ? request['default'] : request;\n\t_ = 'default' in _ ? _['default'] : _;\n\n\tvar env = process.env.NODE_ENV;\n\tvar config;\n\tswitch (env) {\n\t\tcase 'local':\n\t\t\tconfig = require('./env/local');\n\t\t\tbreak;\n\t\t// case 'development':\n\t\t// \tconfig = require('./env/development');\n\t\t// \tbreak;\n\t\t// case 'staging':\n\t\t// \tconfig = require('./env/staging');\n\t\t// \tbreak;\n\t\tcase 'production':\n\t\t\tconfig = require('./env/production');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconfig = require('./env/production');\n\t\t\tbreak;\n\t}\n\n\tclass AuthRocket {\n\t  constructor(settings) {\n\t    if(settings && _.isString(settings)){\n\t      this.apiUrl = settings;\n\t    } else if (settings && _.isObject(settings)) {\n\t      //Set api url if within settings\n\t      this.apiUrl = _.has(settings, 'apiUrl') ? settings.apiUrl : config.urls.api;\n\t      this.apiKey = _.has(settings, 'apiKey') ? settings.apiKey : config.apiKey;\n\t      this.accountId = _.has(settings, 'accountId') ? settings.accountId : config.accountId;\n\t      this.realmId = _.has(settings, 'realmId') ? settings.realmId : config.realmId;\n\t    }\n\t  }\n\t  /** Login as a user\n\t   * @param {Object} loginData - Object containing data to signup with\n\t   * @param {String} loginData.email - Email of new user\n\t   * @param {String} loginData.password - Password of new user\n\t   * @return {Promise}\n\t   */\n\t  login(loginData) {\n\t    return this.requestWithHeaders('login', loginData).then((res) => {\n\t      console.log('successful login', res);\n\t      //TODO: Handle error response\n\t      return res;\n\t    }, (error) => {\n\t      console.error('Error logging in.', error);\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t  /** Logout a user\n\t   * @param {Object} token - Object containing data to signup with\n\t   * @return {Promise}\n\t   */\n\t  logout(token) {\n\t    return this.requestWithHeaders('logout', {token: token}).then((res) => {\n\t      console.log('successful logout', res);\n\t      //TODO: Handle error response\n\t      return res;\n\t    }, (error) => {\n\t      console.error('Error logging out.', error);\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t  /** Signup a new user\n\t   * @param {Object} signupData - Object containing data to signup with\n\t   * @param {String} signupData.email - Email of new user\n\t   * @param {String} signupData.password - Password of new user\n\t   * @param {String} signupData.confirm - Object containing data to signup with\n\t   * @return {Promise}\n\t   */\n\t  signup(signupData) {\n\t    return this.requestWithHeaders('signup', signupData).then((res) => {\n\t      console.log('successful signup', res);\n\t      //TODO: Handle error response\n\t      return res;\n\t    }, (error) => {\n\t      console.error('Error signing up.', error);\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t  /** Verify an existing token is valid\n\t   * @param {String} token - JSON Web Token to verify\n\t   * @return {Promise}\n\t   */\n\t  verify(token) {\n\t    return this.requestWithHeaders(`sessions/${token}`).then((res) => {\n\t      console.log('token is valid', res);\n\t      return res;\n\t    }, (err) => {\n\t      console.error('Token is invalid.', err);\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Attach AuthRocket request headers and make a request\n\t   * @param {String} endpoint - Endpoint to send request to\n\t   * @param {Object|String} data - Request data\n\t   * @return {Promise}\n\t   */\n\t  requestWithHeaders(endpoint, data) {\n\t    if (!_.has(this, ['accountId', 'apiKey', 'realm'])) {\n\t      console.error('Account, apiKey, and realm are required to make a request with headers');\n\t      return Promise.reject({message: 'Account, apiKey, and realm are required to make a request with headers.'});\n\t    }\n\t    let options = {\n\t      method: 'POST', //TODO: Handle other request methods\n\t      uri: `${this.apiUrl}/${endpoint}`,\n\t      headers: {\n\t        'X-Authrocket-Account': this.accountId,\n\t        'X-Authrocket-Api-Key': this.apiKey,\n\t        'X-Authrocket-Realm': this.realmId,\n\t        'Accept': 'application/json',\n\t        'Content-Type': 'application/json',\n\t        'User-agent': 'https://github.com/prescottprue/authrocket'\n\t      }\n\t    };\n\t    //Add data to request if it exists\n\t    if (data) {\n\t      options.body = data;\n\t    }\n\t    return request(options).then((res) => {\n\t      console.log('successful request:', res);\n\t      //TODO: Handle error response\n\t      return res;\n\t    }, (error) => {\n\t      console.error('Error with request:', error);\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t}\n\n\treturn AuthRocket;\n\n}));"],"sourceRoot":"/source/"}