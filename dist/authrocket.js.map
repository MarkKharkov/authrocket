{"version":3,"sources":["authrocket.js"],"names":[],"mappings":"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","file":"authrocket.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n\ttypeof define === 'function' && define.amd ? define(['lodash'], factory) :\n\tglobal.AuthRocket = factory(global._);\n}(this, function (_) { 'use strict';\n\n\tvar ___default = 'default' in _ ? _['default'] : _;\n\n\tlet defaultConfig = {\n\t\tenvName: 'local',\n\t\taccountId: process.env.AUTHROCKET_ACCOUNT_ID,\n\t\tapiKey: process.env.AUTHROCKET_API_KEY,\n\t\trealmId: process.env.AUTHROCKET_REALM_ID,\n\t\tjwtSecret: process.env.AUTHROCKET_JWT_SECRET,\n\t\turls: {\n\t\t\tapi: process.env.AUTHROCKET_API_URL  || 'https://api-e1.authrocket.com/v1/',\n\t\t\tlogin: process.env.AUTHROCKET_LOGIN_URL,\n\t\t\tsignup: process.env.AUTHROCKET_SIGNUP_URL,\n\t\t\tjslib: process.env.AUTHROCKET_JSLIB_URL\n\t\t}\n\t};\n\tlet instance = null;\n\tclass Config {\n\t\tconstructor() {\n\t\t\tif (!instance) {\n\t      instance = this;\n\t    }\n\t\t\t// console.log({description: 'Config object created.', config: merge(this, defaultConfig), func: 'constructor', obj: 'Config'});\n\t\t\treturn _.merge(instance, defaultConfig);\n\t\t}\n\t\t// get logLevel() {\n\t\t// \treturn defaultConfig.envs[envName].logLevel;\n\t\t// }\n\t\t// set envName(newEnv) {\n\t\t// \tenvName = newEnv;\n\t\t// \t// this.envName = newEnv;\n\t\t// \t// console.log('Environment name set:', envName);\n\t\t// }\n\t\t// get env() {\n\t\t// \treturn defaultConfig.envs[envName];\n\t\t// }\n\t}\n\tlet config = new Config();\n\n\tclass AuthRocket {\n\t  constructor(settings) {\n\t    if (settings && ___default.isString(settings)) {\n\t      this.apiUrl = settings;\n\t    } else {\n\t      //Set api url if within settings\n\t      this.apiUrl = ___default.has(settings, 'apiUrl') ? settings.apiUrl : config.urls.api;\n\t      this.apiKey = ___default.has(settings, 'apiKey') ? settings.apiKey : config.apiKey;\n\t      this.accountId = ___default.has(settings, 'accountId') ? settings.accountId : config.accountId;\n\t      this.realmId = ___default.has(settings, 'realmId') ? settings.realmId : config.realmId;\n\t      this.jsApiUrl = ___default.has(settings, 'jsApiUrl') ? settings.urls.jslib : config.urls.jslib;\n\t      this.signupUrl = ___default.has(settings, 'signupUrl') ? settings.urls.signup : config.urls.signup || config.urls.api;\n\t    }\n\t  }\n\t  /** Login as a user\n\t   * @param {Object} loginData - Object containing data to signup with\n\t   * @param {String} loginData.email - Email of new user\n\t   * @param {String} loginData.password - Password of new user\n\t   * @return {Promise}\n\t   */\n\t  login(loginData) {\n\t    return this.requestWithHeaders('login', loginData).then((res) => {\n\t      console.log('successful login', res);\n\t      //TODO: Handle error response\n\t      return res;\n\t    }, (error) => {\n\t      console.error('Error logging in.', error);\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t  /** Logout a user\n\t   * @param {Object} token - Object containing data to signup with\n\t   * @return {Promise}\n\t   */\n\t  logout(token) {\n\t    return this.requestWithHeaders('logout', {token: token}).then((res) => {\n\t      console.log('successful logout', res);\n\t      //TODO: Handle error response\n\t      return res;\n\t    }, (error) => {\n\t      console.error('Error logging out.', error);\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t  /** Signup a new user\n\t   * @param {Object} signupData - Object containing data to signup with\n\t   * @param {String} signupData.email - Email of new user\n\t   * @param {String} signupData.password - Password of new user\n\t   * @param {String} signupData.confirm - Object containing data to signup with\n\t   * @return {Promise}\n\t   */\n\t  signup(signupData) {\n\t    return this.requestWithHeaders(`${this.jsApiUrl}signup`, signupData).then((res) => {\n\t      console.log('successful signup', res);\n\t      //TODO: Handle error response\n\t      return res;\n\t    }, (error) => {\n\t      console.error('Error signing up.', error);\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t  /** Verify an existing token is valid\n\t   * @param {String} token - JSON Web Token to verify\n\t   * @return {Promise}\n\t   */\n\t  verify(token) {\n\t    return this.requestWithHeaders(`sessions/${token}`).then((res) => {\n\t      console.log('token is valid', res);\n\t      return res;\n\t    }, (err) => {\n\t      console.error('Token is invalid.', err);\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Attach AuthRocket request headers and make a request\n\t   * @param {String} endpoint - Endpoint to send request to\n\t   * @param {Object|String} data - Request data\n\t   * @return {Promise}\n\t   */\n\t   requestWithHeaders(url, data) {\n\n\t   }\n\n\t  // requestWithHeaders(url, data) {\n\t  //   // if (!_.has(this, ['accountId', 'apiKey', 'realmId'])) {\n\t  //   //   console.error('Account, apiKey, and realm are required to make a request with headers.', JSON.stringify(this));\n\t  //   //   return Promise.reject({message: 'Account, apiKey, and realm are required to make a request with headers.'});\n\t  //   // }\n\t  //   let options = {\n\t  //     method: 'post', //TODO: Handle other request methods\n\t  //     headers: {\n\t  //     //   'X-Authrocket-Account': this.accountId,\n\t  //     //   'X-Authrocket-Api-Key': this.apiKey,\n\t  //     //   'X-Authrocket-Realm': this.realmId,\n\t  //       'Accept': 'application/json',\n\t  //       'Content-Type': 'application/json',\n\t  //     //   'User-agent': 'https://github.com/prescottprue/authrocket'\n\t  //     }\n\t  //   };\n\t  //   //Add data to request if it exists\n\t  //   if (data) {\n\t  //     options.body = data;\n\t  //   }\n\t  //   console.log('requesting with options:',url, options);\n\t  //   return fetch(url, options).then((res) => {\n\t  //     if (res.status >= 200 && res.status < 300) {\n\t  //       if (res.error) {\n\t  //         return Promise.reject(res.error);\n\t  //       }\n\t  //       console.log('response with text:', res.json());\n\t  //       return res.json();\n\t  //     } else {\n\t  //       console.log('error response:', res);\n\t  //       var error = new Error(res.statusText);\n\t  //       error.response = res;\n\t  //       return Promise.reject(res.statusText);\n\t  //     }\n\t  //   }).then((text) => {\n\t  //     console.log('Text response:', text);\n\t  //     return text;\n\t  //   });\n\t  // }\n\t}\n\n\treturn AuthRocket;\n\n}));"],"sourceRoot":"/source/"}