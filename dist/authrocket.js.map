{"version":3,"sources":["authrocket.js"],"names":[],"mappings":";;;;AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC3B,QAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAC3G,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC,GACzE,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;CAC5C,CAAA,CAAC,IAAI,EAAE,UAAU,OAAO,EAAE;AAAE,aAAY,CAAC;;AAEzC,QAAO,GAAG,SAAS,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;;AAE9D,KAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;AAC/B,KAAI,MAAM,CAAC;AACX,SAAQ,GAAG;AACV,OAAK,OAAO;AACX,SAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAChC,SAAM;AAAA;;;;;;AAOP,OAAK,YAAY;AAChB,SAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACrC,SAAM;AAAA,AACP;AACC,SAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACrC,SAAM;AAAA,EACP;;KAEK,UAAU;AACH,WADP,UAAU,CACF,QAAQ,EAAE;yBADlB,UAAU;GAGb;;eAHG,UAAU;;UAIT,iBAAG;AACN,WAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAK;AAClD,SAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;AACtC,aAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;MACpB;KACH,CAAC,CAAC;IACJ;;;SAVG,UAAU;;;AAahB,QAAO,UAAU,CAAC;CAElB,CAAC,CAAE","file":"authrocket.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('request')) :\n\ttypeof define === 'function' && define.amd ? define(['request'], factory) :\n\tglobal.AuthRocket = factory(global.request);\n}(this, function (request) { 'use strict';\n\n\trequest = 'default' in request ? request['default'] : request;\n\n\tvar env = process.env.NODE_ENV;\n\tvar config;\n\tswitch (env) {\n\t\tcase 'local':\n\t\t\tconfig = require('./env/local');\n\t\t\tbreak;\n\t\t// case 'development':\n\t\t// \tconfig = require('./env/development');\n\t\t// \tbreak;\n\t\t// case 'staging':\n\t\t// \tconfig = require('./env/staging');\n\t\t// \tbreak;\n\t\tcase 'production':\n\t\t\tconfig = require('./env/production');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconfig = require('./env/production');\n\t\t\tbreak;\n\t}\n\n\tclass AuthRocket {\n\t  constructor(settings) {\n\n\t  }\n\t  login() {\n\t    request(config.urls.api, (error, response, body) => {\n\t      if (!error && response.statusCode == 200) {\n\t          console.log(body); // Print the page\n\t       }\n\t    });\n\t  }\n\t}\n\n\treturn AuthRocket;\n\n}));"],"sourceRoot":"/source/"}