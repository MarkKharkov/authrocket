{"version":3,"sources":["authrocket.min.js","/source/authrocket.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","call","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","global","factory","exports","module","require","define","amd","AuthRocket","_","superagent","this","removeTrailingSlash","url","isString","replace","logger","error","description","func","file","runConsoleMethod","methodName","methodData","console","apply","log","buildMessageArgs","logData","msgStr","msgObj","___default","isObject","config","logLevel","has","obj","each","omit","keys","msg","attachHeaders","req","include","addAuthRocketHeaders","handleResponse","Promise","resolve","reject","end","err","res","logger$1","warn","status","response","text","errno","body","newReq","accountId","apiKey","realmId","headers","X-Authrocket-Account","X-Authrocket-Api-Key","X-Authrocket-Realm","Content-Type","addHeaderToReq","headerName","headerVal","set","defaultConfig","process","env","AUTHROCKET_ACCOUNT_ID","AUTHROCKET_API_KEY","AUTHROCKET_REALM_ID","jwtSecret","AUTHROCKET_JWT_SECRET","apiUrl","AUTHROCKET_API_URL","jsUrl","AUTHROCKET_JS_URL","envName","level","configInstance","Config","merge","settingsData","_this","setLevel","envs","newEnv","api","js","msgArgs","debug","info","request","endpoint","queryData","includeHeaders","query","post","data","send","put","del","Action","actionName","actionData","name","init","isList","id","username","then","collection","newData","updateData","urls","_Realms","_Action","_Users","_Action2","_Credentials","_Action3","_SignupTokens","_Action4","_Orgs","_Action5","_Memberships","_Action6","_AuthProviders","_Action7","_ConnectedApps","_Action8","_Hooks","_Action9","_Sessions","_Action10","_Events","_Action11","_Notifications","_Action12","settings","applySettings","loginData","token","signupData"],"mappings":"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","file":"authrocket.min.js","sourcesContent":[null,"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('superagent')) :\n\ttypeof define === 'function' && define.amd ? define(['lodash', 'superagent'], factory) :\n\tglobal.AuthRocket = factory(global._,global.superagent);\n}(this, function (_,superagent) { 'use strict';\n\n\tvar ___default = 'default' in _ ? _['default'] : _;\n\tsuperagent = 'default' in superagent ? superagent['default'] : superagent;\n\n\tlet defaultConfig = {\n\t\taccountId: process.env.AUTHROCKET_ACCOUNT_ID,\n\t\tapiKey: process.env.AUTHROCKET_API_KEY,\n\t\trealmId: process.env.AUTHROCKET_REALM_ID,\n\t\tjwtSecret: process.env.AUTHROCKET_JWT_SECRET,\n\t  apiUrl: process.env.AUTHROCKET_API_URL  || 'https://api-e1.authrocket.com/v1/',\n\t  jsUrl: process.env.AUTHROCKET_JS_URL\n\t};\n\tlet envName = 'prod';\n\tlet level = null;\n\tlet configInstance = null; //Singleton variable\n\tclass Config {\n\t\tconstructor() {\n\t\t\tif (!configInstance) {\n\t      configInstance = this;\n\t    }\n\t\t\treturn _.merge(configInstance, defaultConfig);\n\t\t}\n\t\tset logLevel(setLevel) {\n\t\t\tlevel = setLevel;\n\t\t}\n\t\tget logLevel() {\n\t\t\tif (level) {\n\t\t\t\treturn level;\n\t\t\t}\n\t\t\treturn defaultConfig.envs[envName].logLevel;\n\t\t}\n\t\tset envName(newEnv) {\n\t\t\tenvName = newEnv;\n\t\t\t// this.envName = newEnv;\n\t\t\t// console.log('Environment name set:', envName);\n\t\t}\n\t\tget env() {\n\t\t\treturn defaultConfig.envs[envName];\n\t\t}\n\t  applySettings(settingsData) {\n\t    _.each(_.keys(settingsData), (key) => {\n\t      this[key] = settingsData[key];\n\t    });\n\t  }\n\t  //Map getters that handle removing trailing slash of urls\n\t  get urls() {\n\t    let jsUrl = this.jsUrl;\n\t    let apiUrl = this.apiUrl;\n\t    return {\n\t      get api() {\n\t        return apiUrl ? removeTrailingSlash(apiUrl) : null;\n\t      },\n\t      get js() {\n\t        return jsUrl ? removeTrailingSlash(jsUrl) : null;\n\t      }\n\t    };\n\t  }\n\t}\n\tlet config = new Config();\n\n\tfunction removeTrailingSlash(url) {\n\t  if (!_.isString(url)) {\n\t    logger.error({\n\t\t\t\tdescription: 'Slash can only be removed from strings.',\n\t\t\t\tfunc: 'removeTrailingSlash', file: 'config'\n\t\t\t});\n\t    return url;\n\t  }\n\t  return url.replace(/\\/$/, '');\n\t}\n\n\tlet logger$1 = {\n\t\tlog(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.logLevel === 'trace') {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t}\n\t\t},\n\t\tdebug(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.logLevel === 'trace' || config.logLevel === 'debug') {\n\t\t\t\trunConsoleMethod('debug', msgArgs);\n\t\t\t}\n\t\t},\n\t\tinfo(logData) {\n\t\t\tif (config.logLevel === 'trace'  || config.logLevel === 'debug' || config.logLevel === 'info') {\n\t\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t}\n\t\t},\n\t\twarn(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.logLevel === 'trace' || config.logLevel === 'debug' || config.logLevel === 'info' || config.logLevel === 'warn') {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t}\n\t\t},\n\t\terror(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.logLevel === 'trace' || config.logLevel === 'debug' || config.logLevel === 'info' || config.logLevel === 'warn' || config.logLevel === 'error' || config.logLevel === 'fatal') {\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction runConsoleMethod(methodName, methodData) {\n\t\t//Safley run console methods or use console log\n\t\tif (methodName && console[methodName]) {\n\t\t\treturn console[methodName].apply(console, methodData);\n\t\t} else {\n\t\t\treturn console.log.apply(console, methodData);\n\t\t}\n\t}\n\tfunction buildMessageArgs(logData) {\n\t\tvar msgStr = '';\n\t\tvar msgObj = {};\n\t\t//TODO: Attach time stamp\n\t\t//Attach location information to the beginning of message\n\t\tif (___default.isObject(logData)) {\n\t\t\tif (config.logLevel == 'debug') {\n\t\t\t\tif (___default.has(logData, 'func')) {\n\t\t\t\t\tif (___default.has(logData, 'obj')) {\n\t\t\t\t\t\t//Object and function provided\n\t\t\t\t\t\tmsgStr += `[${logData.obj}.${logData.func}()]\\n `;\n\t\t\t\t\t} else if (___default.has(logData, 'file')) {\n\t\t\t\t\t\tmsgStr += `[${logData.file} > ${logData.func}()]\\n `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgStr += `[${logData.func}()]\\n `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//Print each key and its value other than obj and func\n\t\t\t___default.each(___default.omit(___default.keys(logData)), (key) => {\n\t\t\t\tif (key != 'func' && key != 'obj') {\n\t\t\t\t\tif (key == 'description' || key == 'message') {\n\t\t\t\t\t\tmsgStr += logData[key];\n\t\t\t\t\t} else if (___default.isString(logData[key])) {\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Print objects differently\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tmsgStr += '\\n';\n\t\t} else if (___default.isString(logData)) {\n\t\t\tmsgStr = logData;\n\t\t}\n\t\tvar msg = [msgStr, msgObj];\n\n\t\treturn msg;\n\t}\n\n\tlet request = {\n\t\t/** Run get request with provided data\n\t\t * @param {String} endpoint - Endpoint to send request to\n\t\t * @param {Object|String} data - Query data\n\t\t * @param {Boolean} includeHeaders - Whether or not to include auth headers\n\t\t * @return {Promise}\n\t\t */\n\t\tget(endpoint, queryData, includeHeaders) {\n\t\t\tvar req = superagent.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = attachHeaders(req, includeHeaders);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\t/** Run POST request with provided data\n\t\t * @param {String} endpoint - Endpoint to send request to\n\t\t * @param {Object|String} data - Request data\n\t\t * @param {Boolean} includeHeaders - Whether or not to include auth headers\n\t\t * @return {Promise}\n\t\t */\n\t\tpost(endpoint, data, includeHeaders) {\n\t\t\tvar req = superagent.post(endpoint).send(data);\n\t\t\treq = attachHeaders(req, includeHeaders);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\t/** Run PUT request with provided data\n\t\t * @param {String} endpoint - Endpoint to send request to\n\t\t * @param {Object|String} data - Request data\n\t\t * @param {Boolean} includeHeaders - Whether or not to include auth headers\n\t\t * @return {Promise}\n\t\t */\n\t\tput(endpoint, data, includeHeaders) {\n\t\t\tvar req = superagent.put(endpoint, data);\n\t\t\treq = attachHeaders(req, includeHeaders);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\t/** Run DELETE request with provided data\n\t\t * @param {String} endpoint - Endpoint to send request to\n\t\t * @param {Object|String} data - Request data\n\t\t * @param {Boolean} includeHeaders - Whether or not to include auth headers\n\t\t * @return {Promise}\n\t\t */\n\t\tdel(endpoint, data, includeHeaders) {\n\t\t\tvar req = superagent.put(endpoint, data);\n\t\t\treq = attachHeaders(req, includeHeaders);\n\t\t\treturn handleResponse(req);\n\t\t}\n\t};\n\n\t/** Attach headers to request\n\t * @private\n\t */\n\tfunction attachHeaders(req, include) {\n\t\tif (typeof include === 'undefined' || include) {\n\t\t\treturn addAuthRocketHeaders(req);\n\t\t}\n\t\treturn req;\n\t}\n\t/** Wrap response in promise that has error handling\n\t * @private\n\t */\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// logger.log({description: 'Response:', response:res, func:'handleResponse', file: 'request'});\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\tlogger$1.warn({description: 'Error response.', error: err, func: 'handleResponse'});\n\t\t\t\t\tif (err.status == 401) {\n\t\t\t\t\t\tlogger$1.warn({description: 'Unauthorized. You must be signed into make this request.', func: 'handleResponse'});\n\t\t\t\t\t}\n\t\t\t\t\tif (err && err.response) {\n\t\t\t\t\t\treturn reject(err.response.text);\n\t\t\t\t\t}\n\t\t\t\t\tif (err && err.errno) {\n\t\t\t\t\t\t// logger.warn({description: 'Does not exist.', error: err, func: 'handleResponse'});\n\t\t\t\t\t\treturn reject(err.errno);\n\t\t\t\t\t}\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t/** Add auth rocket headers to request\n\t * @private\n\t */\n\tfunction addAuthRocketHeaders(req) {\n\t\tlet newReq = req;\n\t\tif (!config.accountId || !config.apiKey || !config.realmId) {\n\t\t\tlogger$1.error({description: 'AccountId, apiKey, and realmId are required.', func: 'addAuthRocketHeaders'});\n\t\t\treturn req;\n\t\t}\n\t  let headers = {\n\t    'X-Authrocket-Account': config.accountId,\n\t    'X-Authrocket-Api-Key': config.apiKey,\n\t    'X-Authrocket-Realm': config.realmId,\n\t    // 'Accept': 'application/json',\n\t    'Content-Type': 'application/json'\n\t    // 'User-agent': 'https://github.com/prescottprue/authrocket' //To provide AuthRocket a contact\n\t  };\n\t\tlogger$1.log({description: 'addAuthRocketHeaders called.', config: config});\n\t\t//Add each header to the request\n\t\t_.each(_.keys(headers), (key) => {\n\t\t\tnewReq = addHeaderToReq(req, key, headers[key]);\n\t\t});\n\t\tlogger$1.log({description: 'addAuthRocketHeaders request created.', func: 'addAuthRocketHeaders'});\n\t\treturn newReq;\n\t}\n\t/** Add header to an existing request\n\t * @private\n\t */\n\tfunction addHeaderToReq(req, headerName, headerVal) {\n\t\tif (!headerName || !headerVal) {\n\t\t\tlogger$1.error({description: 'Header name and value required to add header to request.', func: 'addHeaderToReq', obj: 'request'});\n\t\t\treturn;\n\t\t}\n\t\tlogger$1.log({description: 'Header value set.', headerName: headerName, headerVal: headerVal});\n\t\treturn req.set(headerName, headerVal);\n\t}\n\n\tclass Action {\n\t  constructor(actionName, actionData, endpoint) {\n\t    this.name = actionName;\n\t    this.endpoint = endpoint ? endpoint : `${this.name}`;\n\t    this.init(actionData);\n\t  }\n\t  init(actionData) {\n\t    logger$1.log({description: 'Init action called.', actionData: actionData, func: 'url', obj: 'Action'});\n\t    this.isList = actionData ? false : true;\n\t    if (!this.isList) {\n\t      this.actionData = actionData;\n\t      if (_.isString(actionData)) { //String username provided\n\t        this.id = this.actionData;\n\t      } else if (_.has(actionData, 'id') || _.has(actionData, 'username')) { //Check for object to have id or username\n\t        this.id = actionData.id ? actionData.id : actionData.username;\n\t      } else {\n\t        logger$1.warn({description: 'Invalid action data object.', func: 'constructor', obj: 'Action'});\n\t        this.isList = false;\n\t        // return Promise.reject('Invalid this.actionData');\n\t      }\n\t    }\n\t  }\n\t  get url() {\n\t    let url = this.isList ? `${config.urls.api}/${this.endpoint}` : `${config.urls.api}/${this.endpoint}/${this.id}`;\n\t    logger$1.log({description: 'Url created.', url: url, func: 'url', obj: 'Action'});\n\t    return url;\n\t  }\n\t  /** Get\n\t   * @return {Promise}\n\t   */\n\t  get() {\n\t    return request.get(this.url).then((res) => {\n\t      logger$1.log({description: 'Get responded successfully.', res: res, func: 'get', obj: 'Action'});\n\t      if (_.has(res, 'error')) {\n\t        logger$1.error({description: 'Error in get response.', error: res.error, res: res, func: 'get', obj: 'Action'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      return res.collection ? res.collection : res;\n\t    }, (error) => {\n\t      logger$1.error({description: 'Error in GET request.', error: error, func: 'get', obj: 'Action'});\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t  /** Add a new user\n\t   * @param {Object} newData - Object containing data to create with\n\t   * @return {Promise}\n\t   */\n\t  add(newData) {\n\t    return request.post(this.url, newData).then((res) => {\n\t      logger$1.log({description: 'Add request responded successfully.', res: res, func: 'add', obj: 'Action'});\n\t      if (_.has(res, 'error')) {\n\t        logger$1.error({description: 'Error creating new user.', error: res.error, res: res, func: 'add', obj: 'Action'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      logger$1.log({description: 'Add successful.', res: res, func: 'add', obj: 'Action'});\n\t      return res;\n\t    }, (err) => {\n\t      logger$1.error({description: 'Error creating new user.', error: err, func: 'add', obj: 'Action'});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  update(updateData) {\n\t    return request.put(this.url, updateData).then((res) => {\n\t      if (_.has(res, 'error')) {\n\t        logger$1.error({description: 'Error in update request.', error: res.error, res: res, func: 'update', obj: 'Action'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      logger$1.log({description: 'Update successful.', res: res, func: 'update', obj: 'Action'});\n\t      return res;\n\t    }, (err) => {\n\t      logger$1.error({description: 'Error in update request.', error: err, func: 'update', obj: 'Action'});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Remove\n\t   * @return {Promise}\n\t   */\n\t  remove() {\n\t    return request.del(this.url).then((res) => {\n\t      if (_.has(res, 'error')) {\n\t        logger$1.error({description: 'Error in request for removal.', error: res.error, res: res, func: 'remove', obj: 'Action'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      logger$1.log({description: 'Remove successfully.', res: res, func: 'remove', obj: 'Action'});\n\t      return res;\n\t    }, (err) => {\n\t      logger$1.error({description: 'Error in request for removal.', error: err, func: 'remove', obj: 'Action'});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t}\n\n\tclass Realms extends Action {\n\t  constructor(actionData) {\n\t    super('realms', actionData);\n\t  }\n\t  /** Get realms\n\t   * @return {Promise}\n\t   * @example\n\t   * //list realms\n\t   * authrocket.Realms().get().then(function(realmsList){\n\t   *    console.log('List of realms', realmsList);\n\t   * });\n\t   */\n\t   /** Get a specific realm\n\t    * @param {String} token - String JWT token of logged in user\n\t    * @return {Promise}\n\t    * @example\n\t    * //Realms based on token\n\t    * var realmId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t    * authrocket.Realms(realmId).then(function(realm){\n\t    *    console.log('Realm data:', realm);\n\t    * });\n\t    */\n\t    /** Add a realm\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * var realmData = {name: 'Test Realm'};\n\t     * authrocket.Realms().add(realmData).then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t    /** Update a realm\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * authrocket.Realms().update().then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t     /** Remove a realm\n\t      * @param {String} id - Realm Id\n\t      * @return {Promise}\n\t      * @example\n\t      * var realmId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t      * authrocket.Realms(realmId).remove().then(function(){\n\t      *    console.log('Realm removed successfully.');\n\t      * });\n\t      */\n\t}\n\tclass Users extends Action {\n\t  constructor(actionData) {\n\t    super('users', actionData);\n\t  }\n\t  /** Get realms\n\t   * @return {Promise}\n\t   * @example\n\t   * //list realms\n\t   * authrocket.Users().get().then(function(realmsList){\n\t   *    console.log('List of realms', realmsList);\n\t   * });\n\t   */\n\t   /** Get a specific realm\n\t    * @param {String} token - String JWT token of logged in user\n\t    * @return {Promise}\n\t    * @example\n\t    * //Users based on token\n\t    * var realmId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t    * authrocket.Users(realmId).then(function(realm){\n\t    *    console.log('Realm data:', realm);\n\t    * });\n\t    */\n\t    /** Add a realm\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * var realmData = {name: 'Test Realm'};\n\t     * authrocket.Users().add(realmData).then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t    /** Update a realm\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * authrocket.Users().update().then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t     /** Remove a realm\n\t      * @param {String} id - Realm Id\n\t      * @return {Promise}\n\t      * @example\n\t      * var realmId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t      * authrocket.Users(realmId).remove().then(function(){\n\t      *    console.log('Realm removed successfully.');\n\t      * });\n\t      */\n\t}\n\tclass Credentials extends Action {\n\t  constructor(actionData) {\n\t    super('credentials', actionData);\n\t  }\n\t  /** Get Users\n\t   * @return {Promise}\n\t   * @example\n\t   * authrocket.Users().get().then(function(UsersList){\n\t   *    console.log('List of Users', UsersList);\n\t   * });\n\t   */\n\t   /** Get a specific realm\n\t    * @param {String} token - String JWT token of logged in user\n\t    * @return {Promise}\n\t    * @example\n\t    * //Realms based on token\n\t    * var userId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t    * authrocket.Users(userId).then(function(user){\n\t    *    console.log('Realm data:', user);\n\t    * });\n\t    */\n\t    /** Add a user\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * var userData = {name: 'Test Realm'};\n\t     * authrocket.Users().add(userData).then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t    /** Update a user\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * authrocket.Users().update().then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t     /** Remove a Realm\n\t      * @param {String} id - Realm Id\n\t      * @return {Promise}\n\t      * @example\n\t      * var username = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t      * authrocket.Users(username).remove().then(function(){\n\t      *    console.log('Realm removed successfully.');\n\t      * });\n\t      */\n\t}\n\tclass SignupTokens extends Action {\n\t  constructor(actionData) {\n\t    super('signup_tokens', actionData);\n\t  }\n\t  /** Get SignupTokens\n\t   * @return {Promise}\n\t   * @example\n\t   * authrocket.SignupTokens().get().then(function(usersList){\n\t   *    console.log('List of realms', realmsList);\n\t   * });\n\t   */\n\t  /** Get a specific Signup Token\n\t   * @return {Promise}\n\t   * @example\n\t   * //SignupTokens based on token\n\t   * var signupTokenId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t   * authrocket.SignupTokens(signupTokenId).then(function(signupToken){\n\t   *    console.log('Realm data:', signupToken);\n\t   * });\n\t   */\n\t  /** Add a Signup Token\n\t   * @param {Object}  - Signup Token data\n\t   * @return {Promise}\n\t   * @example\n\t   * var signupTokenData = {name: 'Test Realm'};\n\t   * authrocket.SignupTokens().add(signupTokenData).then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  /** Update a signupToken\n\t   * @return {Promise}\n\t   * @example\n\t   * authrocket.SignupTokens().update().then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  /** Remove a signupToken\n\t   * @param {String} id - Realm Id\n\t   * @return {Promise}\n\t   * @example\n\t   * var signupToken = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t   * authrocket.SignupTokens(signupToken).remove().then(function(){\n\t   *    console.log('Realm removed successfully.');\n\t   * });\n\t   */\n\t}\n\tclass Orgs extends Action {\n\t  constructor(actionData) {\n\t    super('orgs', actionData);\n\t  }\n\t  /** Get Orgs\n\t   * @return {Promise}\n\t   * @example\n\t   * //list Orgs\n\t   * authrocket.Realms().get().then(function(OrgsList){\n\t   *    console.log('List of Orgs', OrgsList);\n\t   * });\n\t   */\n\t  /** Get a specific org\n\t   * @param {String} name - Name or id of organization\n\t   * @return {Promise}\n\t   * @example\n\t   * var orgId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t   * authrocket.Realms(orgId).then(function(org){\n\t   *    console.log('Realm data:', org);\n\t   * });\n\t   */\n\t  /** Add a org\n\t   * @param {Object} orgData - Data associated with organization\n\t   * @param {String} name - Name of org\n\t   * @return {Promise}\n\t   * @example\n\t   * var orgData = {name: 'Admins'};\n\t   * authrocket.Realms().add(orgData).then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  /** Update a org\n\t   * @return {Promise}\n\t   * @example\n\t   * authrocket.Realms().update().then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  /** Remove a org\n\t   * @param {String} id - Org Id\n\t   * @return {Promise}\n\t   * @example\n\t   * var orgId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t   * authrocket.Realms(orgId).remove().then(function(){\n\t   *    console.log('Realm removed successfully.');\n\t   * });\n\t   */\n\t}\n\tclass Memberships extends Action {\n\t  constructor(actionData) {\n\t    super('memberships', actionData);\n\t  }\n\t}\n\tclass AuthProviders extends Action {\n\t  constructor(actionData) {\n\t    super('auth_providers', actionData);\n\t  }\n\t}\n\tclass ConnectedApps extends Action {\n\t  constructor(actionData) {\n\t    super('login_policies', actionData);\n\t  }\n\t}\n\tclass Hooks extends Action {\n\t  constructor(actionData) {\n\t    super('app_hooks', actionData);\n\t  }\n\t}\n\tclass Sessions extends Action {\n\t  constructor(actionData) {\n\t    super('session', actionData);\n\t  }\n\t}\n\n\tclass Events extends Action {\n\t  constructor(actionData) {\n\t    super('events', actionData);\n\t  }\n\t}\n\tclass Notifications extends Action {\n\t  constructor(actionData) {\n\t    super('notifications', actionData);\n\t  }\n\t}\n\n\tclass AuthRocket {\n\t  constructor(settings) {\n\t    if (settings && ___default.isString(settings)) {\n\t      this.apiUrl = settings;\n\t    } else {\n\t      //Set api url if within settings\n\t      config.applySettings(settings);\n\t    }\n\t  }\n\t  /** Login as a user\n\t   * @param {Object} loginData - Object containing data to signup with\n\t   * @param {String} loginData.email - Email of new user\n\t   * @param {String} loginData.username - Username of new user\n\t   * @param {String} loginData.password - Password of new user\n\t   * @return {Promise}\n\t   * @example\n\t   * //login as a user\n\t   * var userData = {username: 'testuser1', password: 'secretstring'};\n\t   * authrocket.login(userData).then(function(newUser){\n\t   *    console.log('Successful signup:', newUser);\n\t   * });\n\t   */\n\t  login(loginData) {\n\t    if (!___default.has(loginData, 'username') || !___default.has(loginData, 'password')) {\n\t      logger$1.error({\n\t        description: 'Username and password are required to login.',\n\t        func: 'login', obj: 'AuthRocket'\n\t      });\n\t      return Promise.reject('Username/Email and password are required.');\n\t    }\n\t    logger$1.log({\n\t      description: 'Calling login.', url: `${config.urls.js}/login`,\n\t      loginData: loginData, func: 'login', obj: 'AuthRocket'\n\t    });\n\t    return request.post(`${config.urls.js}/login`, loginData, false).then((res) => {\n\t      if (___default.has(res, 'error')) {\n\t        logger$1.error({\n\t          description: 'Error logging in.', error: res.error,\n\t          res: res, func: 'login', obj: 'AuthRocket'\n\t        });\n\t        return Promise.reject(res.error);\n\t      }\n\t      if (___default.has(res, 'errno')) {\n\t        let error = res.errno;\n\t        let description = 'Error logging in.';\n\t        if (error === 'ENOTFOUND') {\n\t            error = 'User not found.';\n\t            description = error;\n\t        }\n\t        logger$1.error({\n\t          description: error, error: res.errno, res: res,\n\t          func: 'login', obj: 'AuthRocket'\n\t        });\n\t        return Promise.reject(error);\n\t      }\n\t      return res;\n\t    }, (err) => {\n\t      logger$1.error({\n\t        description: 'Error logging in.', error: err,\n\t        func: 'login', obj: 'AuthRocket'\n\t      });\n\t      if (err === 'ENOTFOUND') {\n\t        err = 'User not found.';\n\t      }\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Logout a user\n\t   * @param {String} token - String JWT token of logged in user\n\t   * @return {Promise}\n\t   * @example\n\t   * //logout based on token\n\t   * var token = 'b89787f98728rcn8279.898er89qb8bsf.98basdfasd';\n\t   * authrocket.logout(token).then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  logout(token) {\n\t    if (!token || !___default.isString(token)) {\n\t      logger$1.error({\n\t        description: 'Token string is required to logout.',\n\t        func: 'logout', obj: 'AuthRocket'\n\t      });\n\t      return Promise.reject('Valid token is required to logout.');\n\t    }\n\t    return request.post(`${config.urls.js}/logout`, {token: token}, false).then((res) => {\n\t      if (___default.has(res, 'error') || ___default.has(res, 'errno')) {\n\t        logger$1.error({\n\t          description: 'Error logging out.', error: res.error || res.errno,\n\t          res: res, func: 'logout', obj: 'AuthRocket'\n\t        });\n\t        return Promise.reject(res.error || res.errno);\n\t      }\n\t      logger$1.log({\n\t        description: 'Successful logout.', res: res,\n\t        func: 'logout', obj: 'AuthRocket'\n\t      });\n\t      return res;\n\t    }, (err) => {\n\t      logger$1.error({\n\t        description: 'Error logging out.', error: err\n\t      });\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Signup a new user\n\t   * @param {Object} signupData - Object containing data to signup with\n\t   * @param {String} signupData.email - Email of new user\n\t   * @param {String} signupData.password - Password of new user\n\t   * @param {String} signupData.confirm - Object containing data to signup with\n\t   * @return {Promise}\n\t   * @example\n\t   * //signup\n\t   * var userData = {username: 'testuser1', email: 'test@test.com', password: 'secretstring'};\n\t   * authrocket.signup(userData).then(function(newUser){\n\t   *    console.log('Successful signup:', newUser);\n\t   * });\n\t   */\n\t  signup(signupData) {\n\t    if ((!___default.has(signupData, 'username') && !___default.has(signupData, 'email')) || !___default.has(signupData, 'username')) {\n\t      logger$1.error({\n\t        description: 'Username/Email and password are required to login.',\n\t        func: 'login', obj: 'AuthRocket'\n\t      });\n\t      return Promise.reject('Username/Email and password are required.');\n\t    }\n\t    return request.post(`${config.urls.js}/signup`, signupData).then((res) => {\n\t      if (___default.has(res, 'error') || ___default.has(res, 'errno')) {\n\t        logger$1.error({\n\t          description: 'Error signing up.', error: res.error || res.errno,\n\t          res: res, func: 'signup', obj: 'AuthRocket'\n\t        });\n\t        return Promise.reject(res.error || res.errno);\n\t      }\n\t      logger$1.log({\n\t        description: 'Successful signup', res: res,\n\t        func: 'signup', obj: 'AuthRocket'\n\t      });\n\t      return res;\n\t    }, (err) => {\n\t      logger$1.error({\n\t        description: 'Error signing up.', error: err,\n\t        func: 'signup', obj: 'AuthRocket'\n\t      });\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Verify an existing token is valid\n\t   * @param {String} token - JSON Web Token to verify\n\t   * @param {String} expand - Values to expand (memberships and/or token)\n\t   * @return {Promise}\n\t   * @example\n\t   * //verify token and return membership and token data\n\t   * var token = 'b89787f98728rcn8279.898er89qb8bsf.98basdfasd';\n\t   * authrocket.verify(token , 'memberships,token').then(function(response){\n\t   *    console.log('token is valid. User data:', response);\n\t   * });\n\t   */\n\t  verify(token) {\n\t    return request.get(`${config.urls.api}/sessions/${token}`).then((res) => {\n\t      logger$1.log({\n\t        description: 'Token/Session is valid.', res: res,\n\t        func: 'verify', obj: 'AuthRocket'\n\t      });\n\t      if (___default.has(res, 'error')) {\n\t        logger$1.error({\n\t          description: 'Error verifying token/session.',\n\t          error: res.error, res: res, func: 'verify', obj: 'AuthRocket'\n\t        });\n\t        return Promise.reject(res.error);\n\t      }\n\t      return res;\n\t    }, (err) => {\n\t      logger$1.error({\n\t        description: 'Token/Session is invalid.', error: err,\n\t        func: 'verify', obj: 'AuthRocket'\n\t      });\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Realms action namespace\n\t   *\n\t   */\n\t  Realms(actionData) {\n\t    return new Realms(actionData);\n\t  }\n\t  /** Users action namespace\n\t   * @example\n\t   * //Get users list\n\t   * authrocket.Users().get().then(function(loadedUser){\n\t   *  console.log('User found:', loadedUser);\n\t   * });\n\t   * //Get user by username\n\t   * authrocket.User('someguy1').get().then(function(loadedUser){\n\t   *  console.log('User found:', loadedUser);\n\t   * });\n\t   */\n\t  Users(actionData) {\n\t    return new Users(actionData);\n\t  }\n\t  /** Credentials action namespace\n\t   *\n\t   */\n\t  Credentials(actionData) {\n\t    return new Credentials(actionData);\n\t  }\n\t  /** SignupTokens action namespace\n\t   *\n\t   */\n\t  SignupTokens(actionData) {\n\t    return new SignupTokens(actionData);\n\t  }\n\t  /** Orgs action namespace\n\t   *\n\t   */\n\t  Orgs(actionData) {\n\t    return new Orgs(actionData);\n\t  }\n\t  /** Memberships action namespace\n\t   *\n\t   */\n\t  Memberships(actionData) {\n\t    return new Memberships(actionData);\n\t  }\n\t  /** AuthProviders action namespace\n\t   *\n\t   */\n\t  AuthProviders(actionData) {\n\t    return new AuthProviders(actionData);\n\t  }\n\t  /** ConnectedApps action namespace\n\t   *\n\t   */\n\t  ConnectedApps(actionData) {\n\t    return new ConnectedApps(actionData);\n\t  }\n\t  /** Hooks action namespace\n\t   *\n\t   */\n\t  Hooks(actionData) {\n\t    return new Hooks(actionData);\n\t  }\n\t  /** Sessions action namespace\n\t   *\n\t   */\n\t  Sessions(actionData) {\n\t    return new Sessions(actionData);\n\t  }\n\t  /** Events action namespace\n\t   *\n\t   */\n\t  Events(actionData) {\n\t    return new Events(actionData);\n\t  }\n\t  /** Notifications action namespace\n\t   *\n\t   */\n\t  Notifications(actionData) {\n\t    return new Notifications(actionData);\n\t  }\n\t}\n\n\treturn AuthRocket;\n\n}));"],"sourceRoot":"/source/"}