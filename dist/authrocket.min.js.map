{"version":3,"sources":["authrocket.min.js","/source/authrocket.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","call","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","global","factory","exports","module","require","define","amd","AuthRocket","_","superagent","this","removeTrailingSlash","url","isString","replace","logger","error","description","func","file","runConsoleMethod","methodName","methodData","console","apply","log","buildMessageArgs","logData","msgStr","msgObj","___default","isObject","logLevel","has","obj","each","omit","keys","ind","list","msg","attachHeaders","req","include","addAuthRocketHeaders","handleResponse","Promise","resolve","reject","end","err","res","_logger","warn","status","response","text","errno","body","newReq","config","accountId","apiKey","realmId","headers","X-Authrocket-Account","X-Authrocket-Api-Key","X-Authrocket-Realm","Content-Type","addHeaderToReq","headerName","headerVal","set","Actions","Realms","Users","Credentials","SignupTokens","Orgs","Memberships","AuthProviders","ConnectedApps","Hooks","Sessions","Events","Notifications","defaultConfig","process","env","AUTHROCKET_ACCOUNT_ID","AUTHROCKET_API_KEY","AUTHROCKET_REALM_ID","jwtSecret","AUTHROCKET_JWT_SECRET","apiUrl","AUTHROCKET_API_URL","jsUrl","AUTHROCKET_JS_URL","configInstance","Config","merge","settingsData","_this","api","js","msgArgs","envName","info","debug","request","endpoint","queryData","includeHeaders","query","post","data","send","put","del","Action","actionName","actionData","name","init","isList","id","username","then","collection","newData","updateData","urls","_Action","_Action2","_Action3","_Action4","_Action5","_Action6","_Action7","_Action8","_Action9","_Action10","_Action11","_Action12","settings","applySettings","loginData","token","signupData"],"mappings":"AAIA,QAASA,WAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIC,WAAU,iEAAoED,GAAeD,GAASG,UAAYC,OAAOC,OAAOJ,GAAcA,EAAWE,WAAaG,aAAeC,MAAOP,EAAUQ,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeT,IAAYG,OAAOO,eAAiBP,OAAOO,eAAeX,EAAUC,GAAcD,EAASY,UAAYX,GAEje,QAASY,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIb,WAAU,qCANhH,GAAIc,MAAO,SAAaC,EAAIC,EAAKC,GAAqC,IAA9B,GAAIC,IAAS,EAAwBA,GAAQ,CAAE,GAAIC,GAASJ,EAAIK,EAAWJ,EAAKK,EAAWJ,CAAKK,GAAOC,EAASC,EAASC,OAAWP,GAAS,EAAsB,OAAXC,IAAiBA,EAASO,SAASzB,UAAW,IAAIqB,GAAOpB,OAAOyB,yBAAyBR,EAAQC,EAAW,IAAaK,SAATH,EAAJ,CAAiN,GAAI,SAAWA,GAAQ,MAAOA,GAAKjB,KAAgB,IAAImB,GAASF,EAAKM,GAAK,OAAeH,UAAXD,EAA+BC,OAAoBD,EAAOK,KAAKR,GAApU,GAAIE,GAASrB,OAAO4B,eAAeX,EAAS,IAAe,OAAXI,EAAmB,MAAOE,OAAoBV,GAAKQ,EAAQP,EAAMI,EAAUH,EAAMI,EAAUH,GAAS,IAEtda,aAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAW/B,WAAa+B,EAAW/B,aAAc,EAAO+B,EAAW7B,cAAe,EAAU,SAAW6B,KAAYA,EAAW9B,UAAW,GAAML,OAAOoC,eAAeL,EAAQI,EAAWE,IAAKF,IAAiB,MAAO,UAAUxB,EAAa2B,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBnB,EAAYZ,UAAWuC,GAAiBC,GAAaT,EAAiBnB,EAAa4B,GAAqB5B,OCFjiB,SAAW6B,EAAQC,GACC,gBAAZC,UAA0C,mBAAXC,QAAyBA,OAAOD,QAAUD,EAAQG,QAAQ,UAAWA,QAAQ,eACjG,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,SAAU,cAAeJ,GAC9ED,EAAOO,WAAaN,EAAQD,EAAOQ,EAAER,EAAOS,aAC3CC,KAAM,SAAUF,EAAEC,GAAc,YA0DjC,SAASE,GAAoBC,GAC3B,MAAKJ,GAAEK,SAASD,GAITA,EAAIE,QAAQ,MAAO,KAHxBC,OAAOC,OAAOC,YAAa,0CAA2CC,KAAM,sBAAuBC,KAAM,WAClGP,GAwDX,QAASQ,GAAiBC,EAAYC,GAErC,MAAID,IAAcE,QAAQF,GAClBE,QAAQF,GAAYG,MAAMD,QAASD,GAEnCC,QAAQE,IAAID,MAAMD,QAASD,GAGpC,QAASI,GAAiBC,GACzB,GAAIC,GAAS,GACTC,IAGAC,GAAWC,SAASJ,IACP,SAAZK,GACCF,EAAWG,IAAIN,EAAS,UAG1BC,GAFGE,EAAWG,IAAIN,EAAS,OAErB,IAAQA,EAAQO,IAAG,IAAIP,EAAQT,KAAI,SAC/BY,EAAWG,IAAIN,EAAS,QAC5B,IAAQA,EAAQR,KAAI,MAAMQ,EAAQT,KAAI,SAEtC,IAAQS,EAAQT,KAAI,UAK7BY,EAAWK,KAAKL,EAAWM,KAAKN,EAAWO,KAAKV,IAAW,SAAC9B,EAAKyC,EAAKC,GAC1D,QAAP1C,GAAwB,OAAPA,IACT,eAAPA,GAA+B,WAAPA,EAC3B+B,GAAUD,EAAQ9B,GACRiC,EAAWjB,SAASc,EAAQ9B,IAEtCgC,EAAOhC,GAAO8B,EAAQ9B,GAItBgC,EAAOhC,GAAO8B,EAAQ9B,MAIzB+B,GAAU,MACAE,EAAWjB,SAASc,KAC9BC,EAASD,EAEV,IAAIa,IAAOZ,EAAQC,EAEnB,OAAOW,GAwDR,QAASC,GAAcC,EAAKC,GAC3B,MAAuB,mBAAZA,IAA2BA,EAC9BC,EAAqBF,GAEtBA,EAKR,QAASG,GAAeH,GACvB,MAAO,IAAII,SAAQ,SAACC,EAASC,GAC5BN,EAAIO,IAAI,SAACC,EAAKC,GACb,MAAKD,IAIJE,EAAQC,MAAMpC,YAAa,kBAAmBD,MAAOkC,EAAKhC,KAAM,mBAC9C,KAAdgC,EAAII,QACPF,EAAQC,MAAMpC,YAAa,2DAA4DC,KAAM,mBAGtF8B,EADJE,GAAOA,EAAIK,SACAL,EAAIK,SAASC,KAExBN,GAAOA,EAAIO,MAEAP,EAAIO,MAELP,IAbPH,EAAQI,EAAIO,UAqBvB,QAASd,GAAqBF,GAC7B,GAAIiB,GAASjB,CACb,KAAKkB,EAAOC,YAAcD,EAAOE,SAAWF,EAAOG,QAElD,MADAX,GAAQpC,OAAOC,YAAa,+CAAgDC,KAAM,yBAC3EwB,CAEP,IAAIsB,IACFC,uBAAwBL,EAAOC,UAC/BK,uBAAwBN,EAAOE,OAC/BK,qBAAsBP,EAAOG,QAE7BK,eAAgB,mBASnB,OANAhB,GAAQ3B,KAAKR,YAAa,+BAAgC2C,OAAQA,IAElEpD,EAAE2B,KAAK3B,EAAE6B,KAAK2B,GAAU,SAACnE,GACxB8D,EAASU,EAAe3B,EAAK7C,EAAKmE,EAAQnE,MAE3CuD,EAAQ3B,KAAKR,YAAa,wCAAyCC,KAAM,yBAClEyC,EAKR,QAASU,GAAe3B,EAAK4B,EAAYC,GACxC,MAAKD,IAAeC,GAIpBnB,EAAQ3B,KAAKR,YAAa,oBAAqBqD,WAAYA,EAAYC,UAAWA,IAC3E7B,EAAI8B,IAAIF,EAAYC,QAJ1BnB,GAAQpC,OAAOC,YAAa,2DAA4DC,KAAM,iBAAkBgB,IAAK,YAxRvH,GAAIJ,GAAa,WAAatB,GAAIA,EAAE,WAAaA,CACjDC,GAAa,WAAaA,GAAaA,EAAW,WAAaA,CAE/D,IAAIgE,GAAOjH,OAAA8B,qBACNoF,QDQHxF,ICRU,WAAK,MAAOwF,IDWtB5G,cAAc,EACdF,YAAY,GCXT+G,ODcHzF,ICdS,WAAK,MAAOyF,IDiBrB7G,cAAc,EACdF,YAAY,GCjBTgH,aDoBH1F,ICpBe,WAAK,MAAO0F,IDuB3B9G,cAAc,EACdF,YAAY,GCvBTiH,cD0BH3F,IC1BgB,WAAK,MAAO2F,ID6B5B/G,cAAc,EACdF,YAAY,GC7BTkH,MDgCH5F,IChCQ,WAAK,MAAO4F,IDmCpBhH,cAAc,EACdF,YAAY,GCnCTmH,aDsCH7F,ICtCe,WAAK,MAAO6F,IDyC3BjH,cAAc,EACdF,YAAY,GCzCToH,eD4CH9F,IC5CiB,WAAK,MAAO8F,ID+C7BlH,cAAc,EACdF,YAAY,GC/CTqH,eDkDH/F,IClDiB,WAAK,MAAO+F,IDqD7BnH,cAAc,EACdF,YAAY,GCrDTsH,ODwDHhG,ICxDS,WAAK,MAAOgG,ID2DrBpH,cAAc,EACdF,YAAY,GC3DTuH,UD8DHjG,IC9DY,WAAK,MAAOiG,IDiExBrH,cAAc,EACdF,YAAY,GCjETwH,QDoEHlG,ICpEU,WAAK,MAAOkG,IDuEtBtH,cAAc,EACdF,YAAY,GCvETyH,eD0EHnG,IC1EiB,WAAK,MAAOmG,ID6E7BvH,cAAc,EACdF,YAAY,KC3EV0H,GACHzB,UAAW0B,QAAQC,IAAIC,sBACvB3B,OAAQyB,QAAQC,IAAIE,mBACpB3B,QAASwB,QAAQC,IAAIG,oBACrBC,UAAWL,QAAQC,IAAIK,sBACtBC,OAAQP,QAAQC,IAAIO,oBAAuB,oCAC3CC,MAAOT,QAAQC,IAAIS,mBAEjBC,EAAiB,KACfC,EAAM,WACA,QADNA,KAMJ,MD4EAlI,iBAAgByC,KClFZyF,GAECD,IACDA,EAAiBxF,MAErBa,QAAQE,KAAKR,YAAa,yBAA0B2C,OAAQpD,EAAE4F,MAAM1F,KAAM4E,GAAgBpE,KAAM,cAAegB,IAAK,WAC7G1B,EAAE4F,MAAMF,EAAgBZ,GDwHhC,MAnCAjG,cC3FK8G,ID4FJtG,IAAK,gBACLlC,MCrFa,SAAC0I,GDsFb,GAAIC,GAAQ5F,ICrFXF,GAAE2B,KAAK3B,EAAE6B,KAAKgE,GAAe,SAACxG,GAC5ByG,EAAKzG,GAAOwG,EAAaxG,QD6F7BA,IAAK,OACLX,IC1FQ,WACN,GAAI8G,GAAQtF,KAAKsF,MACbF,EAASpF,KAAKoF,MAClB,OAAAtI,QAAA8B,qBACMiH,KD2FLrH,IC3FQ,WACL,MAAO4G,GAASnF,EAAoBmF,GAAU,MD6FjDhI,cAAc,EACdF,YAAY,GC5FP4I,ID+FLtH,IC/FO,WACJ,MAAO8G,GAAQrF,EAAoBqF,GAAS,MDiG/ClI,cAAc,EACdF,YAAY,SCxHXuI,KA2BFvC,EAAS,GAAIuC,GAWbnE,EAAW,OAEX4B,GAAO5B,WACVA,EAAW4B,EAAO5B,SAEnB,IAAIoB,IACH3B,IAAG,SAACE,GACH,GAAI8E,GAAU/E,EAAiBC,EACT,eAAlBiC,EAAO8C,QACVtF,EAAiB,MAAOqF,GAExBrF,EAAiB,MAAOqF,IAG1BE,KAAI,SAAChF,GACJ,GAAI8E,GAAU/E,EAAiBC,EACT,eAAlBiC,EAAO8C,QACVtF,EAAiB,OAAQqF,GAEzBrF,EAAiB,OAAQqF,IAG3BpD,KAAI,SAAC1B,GACJ,GAAI8E,GAAU/E,EAAiBC,EACT,eAAlBiC,EAAO8C,QACVtF,EAAiB,OAAQqF,GAEzBrF,EAAiB,OAAQqF,IAG3BG,MAAK,SAACjF,GACL,GAAI8E,GAAU/E,EAAiBC,EACT,eAAlBiC,EAAO8C,SAIVtF,EAAiB,QAASqF,IAG5BzF,MAAK,SAACW,GACL,GAAI8E,GAAU/E,EAAiBC,EACT,eAAlBiC,EAAO8C,QAEVtF,EAAiB,QAASqF,GAE1BrF,EAAiB,QAASqF,KAuDzBI,GAOH3H,IAAG,SAAC4H,EAAUC,EAAWC,GACxB,GAAItE,GAAMjC,EAAWvB,IAAI4H,EAKzB,OAJIC,IACHrE,EAAIuE,MAAMF,GAEXrE,EAAMD,EAAcC,EAAKsE,GAClBnE,EAAeH,IAQvBwE,KAAI,SAACJ,EAAUK,EAAMH,GACpB,GAAItE,GAAMjC,EAAWyG,KAAKJ,GAAUM,KAAKD,EAEzC,OADAzE,GAAMD,EAAcC,EAAKsE,GAClBnE,EAAeH,IAQvB2E,IAAG,SAACP,EAAUK,EAAMH,GACnB,GAAItE,GAAMjC,EAAW4G,IAAIP,EAAUK,EAEnC,OADAzE,GAAMD,EAAcC,EAAKsE,GAClBnE,EAAeH,IAQvB4E,IAAG,SAACR,EAAUK,EAAMH,GACnB,GAAItE,GAAMjC,EAAW4G,IAAIP,EAAUK,EAEnC,OADAzE,GAAMD,EAAcC,EAAKsE,GAClBnE,EAAeH,KA4ElB6E,EAAM,WACC,QADPA,GACQC,EAAYC,EAAYX,GDuGpC7I,gBAAgByC,KCxGZ6G,GAEF7G,KAAKgH,KAAOF,EACZ9G,KAAKoG,SAAWA,EAAWA,EAAQ,GAAMpG,KAAKgH,KAC9ChH,KAAKiH,KAAKF,GDkNb,MAvGApI,cC/GKkI,IDgHJ1H,IAAK,OACLlC,MC3GI,SAAC8J,GACHrE,EAAQ3B,KAAKR,YAAa,sBAAuBwG,WAAYA,EAAYvG,KAAM,MAAOgB,IAAK,WAC3FxB,KAAKkH,OAASH,GAAa,GAAQ,EAC9B/G,KAAKkH,SACRlH,KAAK+G,WAAaA,EACdjH,EAAEK,SAAS4G,GACb/G,KAAKmH,GAAKnH,KAAK+G,WACNjH,EAAEyB,IAAIwF,EAAY,OAASjH,EAAEyB,IAAIwF,EAAY,YACtD/G,KAAKmH,GAAKJ,EAAWI,GAAKJ,EAAWI,GAAKJ,EAAWK,UAErD1E,EAAQC,MAAMpC,YAAa,8BAA+BC,KAAM,cAAegB,IAAK,WACpFxB,KAAKkH,QAAS,ODmHpB/H,IAAK,MAKLlC,MC3GG,WACD,MAAOkJ,GAAQ3H,IAAIwB,KAAKE,KAAKmH,KAAK,SAAC5E,GAEjC,MADAC,GAAQ3B,KAAKR,YAAa,8BAA+BkC,IAAKA,EAAKjC,KAAM,MAAOgB,IAAK,WACjF1B,EAAEyB,IAAIkB,EAAK,UACbC,EAAQpC,OAAOC,YAAa,yBAA0BD,MAAOmC,EAAInC,MAAOmC,IAAKA,EAAKjC,KAAM,MAAOgB,IAAK,WAC7FY,QAAQE,OAAOG,EAAInC,QAErBmC,EAAI6E,WAAa7E,EAAI6E,WAAa7E,GACxC,SAACnC,GAEF,MADAoC,GAAQpC,OAAOC,YAAa,wBAAyBD,MAAOA,EAAOE,KAAM,MAAOgB,IAAK,WAC9EY,QAAQE,OAAOhC,QDoH1BnB,IAAK,MACLlC,MC9GG,SAACsK,GACF,MAAOpB,GAAQK,KAAKxG,KAAKE,IAAKqH,GAASF,KAAK,SAAC5E,GAE3C,MADAC,GAAQ3B,KAAKR,YAAa,sCAAuCkC,IAAKA,EAAKjC,KAAM,MAAOgB,IAAK,WACzF1B,EAAEyB,IAAIkB,EAAK,UACbC,EAAQpC,OAAOC,YAAa,2BAA4BD,MAAOmC,EAAInC,MAAOmC,IAAKA,EAAKjC,KAAM,MAAOgB,IAAK,WAC/FY,QAAQE,OAAOG,EAAInC,SAE5BoC,EAAQ3B,KAAKR,YAAa,kBAAmBkC,IAAKA,EAAKjC,KAAM,MAAOgB,IAAK,WAClEiB,IACN,SAACD,GAEF,MADAE,GAAQpC,OAAOC,YAAa,2BAA4BD,MAAOkC,EAAKhC,KAAM,MAAOgB,IAAK,WAC/EY,QAAQE,OAAOE,QDkH1BrD,IAAK,SACLlC,MChHM,SAACuK,GACL,MAAOrB,GAAQQ,IAAI3G,KAAKE,IAAKsH,GAAYH,KAAK,SAAC5E,GAC7C,MAAI3C,GAAEyB,IAAIkB,EAAK,UACbC,EAAQpC,OAAOC,YAAa,2BAA4BD,MAAOmC,EAAInC,MAAOmC,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,WAClGY,QAAQE,OAAOG,EAAInC,SAE5BoC,EAAQ3B,KAAKR,YAAa,qBAAsBkC,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,WACxEiB,IACN,SAACD,GAEF,MADAE,GAAQpC,OAAOC,YAAa,2BAA4BD,MAAOkC,EAAKhC,KAAM,SAAUgB,IAAK,WAClFY,QAAQE,OAAOE,QDwH1BrD,IAAK,SACLlC,MCnHM,WACJ,MAAOkJ,GAAQS,IAAI5G,KAAKE,KAAKmH,KAAK,SAAC5E,GACjC,MAAI3C,GAAEyB,IAAIkB,EAAK,UACbC,EAAQpC,OAAOC,YAAa,gCAAiCD,MAAOmC,EAAInC,MAAOmC,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,WACvGY,QAAQE,OAAOG,EAAInC,SAE5BoC,EAAQ3B,KAAKR,YAAa,uBAAwBkC,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,WAC1EiB,IACN,SAACD,GAEF,MADAE,GAAQpC,OAAOC,YAAa,gCAAiCD,MAAOkC,EAAKhC,KAAM,SAAUgB,IAAK,WACvFY,QAAQE,OAAOE,QDuH1BrD,IAAK,MACLX,ICzLO,WACL,GAAI0B,GAAMF,KAAKkH,OAAYhE,EAAOuE,KAAK5B,IAAG,IAAI7F,KAAKoG,SAAgBlD,EAAOuE,KAAK5B,IAAG,IAAI7F,KAAKoG,SAAQ,IAAIpG,KAAKmH,EAE5G,OADAzE,GAAQ3B,KAAKR,YAAa,eAAgBL,IAAKA,EAAKM,KAAM,MAAOgB,IAAK,WAC/DtB,MAzBL2G,KA4FA7C,EAAM,SAAA0D,GACC,QADP1D,GACQ+C,GDgIZxJ,gBAAgByC,KCjIZgE,GAEFtG,KAAAZ,OAAA4B,eAFEsF,EAAMnH,WAAA,cAAAmD,MAAAvB,KAAAuB,KAEF,SAAU+G,GDgLnB,MApDAtK,WC9HKuH,EAAM0D,GAAN1D,GAAe6C,GAiDf5C,EAAK,SAAA0D,GACE,QADP1D,GACQ8C,GDuIZxJ,gBAAgByC,KCxIZiE,GAEFvG,KAAAZ,OAAA4B,eAFEuF,EAAKpH,WAAA,cAAAmD,MAAAvB,KAAAuB,KAED,QAAS+G,GDuLlB,MApDAtK,WCrIKwH,EAAK0D,GAAL1D,GAAc4C,GAiDd3C,EAAW,SAAA0D,GACJ,QADP1D,GACQ6C,GD8IZxJ,gBAAgByC,KC/IZkE,GAEFxG,KAAAZ,OAAA4B,eAFEwF,EAAWrH,WAAA,cAAAmD,MAAAvB,KAAAuB,KAEP,cAAe+G,GD6LxB,MAnDAtK,WC5IKyH,EAAW0D,GAAX1D,GAAoB2C,GAgDpB1C,EAAY,SAAA0D,GACL,QADP1D,GACQ4C,GDqJZxJ,gBAAgByC,KCtJZmE,GAEFzG,KAAAZ,OAAA4B,eAFEyF,EAAYtH,WAAA,cAAAmD,MAAAvB,KAAAuB,KAER,gBAAiB+G,GDkM1B,MAjDAtK,WCnJK0H,EAAY0D,GAAZ1D,GAAqB0C,GA8CrBzC,EAAI,SAAA0D,GACG,QADP1D,GACQ2C,GD4JZxJ,gBAAgByC,KC7JZoE,GAEF1G,KAAAZ,OAAA4B,eAFE0F,EAAIvH,WAAA,cAAAmD,MAAAvB,KAAAuB,KAEA,OAAQ+G,GD2MjB,MAnDAtK,WC1JK2H,EAAI0D,GAAJ1D,GAAayC,GAgDbxC,EAAW,SAAA0D,GACJ,QADP1D,GACQ0C,GDmKZxJ,gBAAgByC,KCpKZqE,GAEF3G,KAAAZ,OAAA4B,eAFE2F,EAAWxH,WAAA,cAAAmD,MAAAvB,KAAAuB,KAEP,cAAe+G,GDuKxB,MARAtK,WCjKK4H,EAAW0D,GAAX1D,GAAoBwC,GAKpBvC,EAAa,SAAA0D,GACN,QADP1D,GACQyC,GD0KZxJ,gBAAgByC,KC3KZsE,GAEF5G,KAAAZ,OAAA4B,eAFE4F,EAAazH,WAAA,cAAAmD,MAAAvB,KAAAuB,KAET,iBAAkB+G,GD8K3B,MARAtK,WCxKK6H,EAAa0D,GAAb1D,GAAsBuC,GAKtBtC,EAAa,SAAA0D,GACN,QADP1D,GACQwC,GDiLZxJ,gBAAgByC,KClLZuE,GAEF7G,KAAAZ,OAAA4B,eAFE6F,EAAa1H,WAAA,cAAAmD,MAAAvB,KAAAuB,KAET,iBAAkB+G,GDqL3B,MARAtK,WC/KK8H,EAAa0D,GAAb1D,GAAsBsC,GAKtBrC,EAAK,SAAA0D,GACE,QADP1D,GACQuC,GDwLZxJ,gBAAgByC,KCzLZwE,GAEF9G,KAAAZ,OAAA4B,eAFE8F,EAAK3H,WAAA,cAAAmD,MAAAvB,KAAAuB,KAED,YAAa+G,GD4LtB,MARAtK,WCtLK+H,EAAK0D,GAAL1D,GAAcqC,GAKdpC,EAAQ,SAAA0D,GACD,QADP1D,GACQsC,GD+LZxJ,gBAAgByC,KChMZyE,GAEF/G,KAAAZ,OAAA4B,eAFE+F,EAAQ5H,WAAA,cAAAmD,MAAAvB,KAAAuB,KAEJ,UAAW+G,GDmMpB,MARAtK,WC7LKgI,EAAQ0D,GAAR1D,GAAiBoC,GAMjBnC,EAAM,SAAA0D,GACC,QADP1D,GACQqC,GDqMZxJ,gBAAgByC,KCtMZ0E,GAEFhH,KAAAZ,OAAA4B,eAFEgG,EAAM7H,WAAA,cAAAmD,MAAAvB,KAAAuB,KAEF,SAAU+G,GDyMnB,MARAtK,WCnMKiI,EAAM0D,GAAN1D,GAAemC,GAKflC,EAAa,SAAA0D,GACN,QADP1D,GACQoC,GD4MZxJ,gBAAgByC,KC7MZ2E,GAEFjH,KAAAZ,OAAA4B,eAFEiG,EAAa9H,WAAA,cAAAmD,MAAAvB,KAAAuB,KAET,gBAAiB+G,GDgN1B,MARAtK,WC1MKkI,EAAa0D,GAAb1D,GAAsBkC,GAMtBhH,EAAU,WACH,QADPA,GACQyI,GDgNZ/K,gBAAgByC,KCjNZH,GAEEyI,GAAYlH,EAAWjB,SAASmI,GAClCtI,KAAKoF,OAASkD,EAGdpF,EAAOqF,cAAcD,GDmd1B,MAhPA3J,cCzOKkB,ID0OJV,IAAK,QACLlC,MCrNK,SAACuL,GACJ,MAAKpH,GAAWG,IAAIiH,EAAW,aAAgBpH,EAAWG,IAAIiH,EAAW,aAIzE9F,EAAQ3B,KAAKR,YAAa,iBAAkBL,IAAQgD,EAAOuE,KAAK3B,GAAE,SAAU0C,UAAWA,EAAWhI,KAAM,QAASgB,IAAK,eAC/G2E,EAAQK,KAAQtD,EAAOuE,KAAK3B,GAAE,SAAU0C,GAAW,GAAOnB,KAAK,SAAC5E,GACrE,GAAIrB,EAAWG,IAAIkB,EAAK,SAEtB,MADAC,GAAQpC,OAAOC,YAAa,oBAAqBD,MAAOmC,EAAInC,MAAOmC,IAAKA,EAAKjC,KAAM,QAASgB,IAAK,eAC1FY,QAAQE,OAAOG,EAAInC,MAE5B,IAAIc,EAAWG,IAAIkB,EAAK,SAAU,CAChC,GAAInC,GAAQmC,EAAIM,MACZxC,EAAc,mBAMlB,OALc,cAAVD,IACAA,EAAQ,kBACRC,EAAcD,GAElBoC,EAAQpC,OAAOC,YAAaD,EAAOA,MAAOmC,EAAIM,MAAON,IAAKA,EAAKjC,KAAM,QAASgB,IAAK,eAC5EY,QAAQE,OAAOhC,GAExB,MAAOmC,IACN,SAACD,GAKF,MAJAE,GAAQpC,OAAOC,YAAa,oBAAqBD,MAAOkC,EAAKhC,KAAM,QAASgB,IAAK,eACrE,cAARgB,IACFA,EAAM,mBAEDJ,QAAQE,OAAOE,OAzBtBE,EAAQpC,OAAOC,YAAa,+CAAgDC,KAAM,QAASgB,IAAK,eACzFY,QAAQE,OAAO,iDD4P1BnD,IAAK,SACLlC,MCxNM,SAACwL,GACL,MAAKA,IAAUrH,EAAWjB,SAASsI,GAI5BtC,EAAQK,KAAQtD,EAAOuE,KAAK3B,GAAE,WAAY2C,MAAOA,IAAQ,GAAOpB,KAAK,SAAC5E,GAC3E,MAAIrB,GAAWG,IAAIkB,EAAK,UAAYrB,EAAWG,IAAIkB,EAAK,UACtDC,EAAQpC,OAAOC,YAAa,qBAAsBD,MAAOmC,EAAInC,OAASmC,EAAIM,MAAON,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,eACzGY,QAAQE,OAAOG,EAAInC,OAASmC,EAAIM,SAEzCL,EAAQ3B,KAAKR,YAAa,qBAAsBkC,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,eACxEiB,IACN,SAACD,GAEF,MADAE,GAAQpC,OAAOC,YAAa,qBAAsBD,MAAOkC,IAClDJ,QAAQE,OAAOE,MAZtBE,EAAQpC,OAAOC,YAAa,sCAAuCC,KAAM,SAAUgB,IAAK,eACjFY,QAAQE,OAAO,0CDqP1BnD,IAAK,SACLlC,MC3NM,SAACyL,GACL,OAAMtH,EAAWG,IAAImH,EAAY,aAAgBtH,EAAWG,IAAImH,EAAY,WAActH,EAAWG,IAAImH,EAAY,YAI9GvC,EAAQK,KAAQtD,EAAOuE,KAAK3B,GAAE,UAAW4C,GAAYrB,KAAK,SAAC5E,GAChE,MAAIrB,GAAWG,IAAIkB,EAAK,UAAYrB,EAAWG,IAAIkB,EAAK,UACtDC,EAAQpC,OAAOC,YAAa,oBAAqBD,MAAOmC,EAAInC,OAASmC,EAAIM,MAAON,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,eACxGY,QAAQE,OAAOG,EAAInC,OAASmC,EAAIM,SAEzCL,EAAQ3B,KAAKR,YAAa,oBAAqBkC,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,eACvEiB,IACN,SAACD,GAEF,MADAE,GAAQpC,OAAOC,YAAa,oBAAqBD,MAAOkC,EAAKhC,KAAM,SAAUgB,IAAK,eAC3EY,QAAQE,OAAOE,MAZtBE,EAAQpC,OAAOC,YAAa,qDAAsDC,KAAM,QAASgB,IAAK,eAC/FY,QAAQE,OAAO,iDDsP1BnD,IAAK,SACLlC,MC9NM,SAACwL,GACL,MAAOtC,GAAQ3H,IAAO0E,EAAOuE,KAAK5B,IAAG,aAAa4C,GAASpB,KAAK,SAAC5E,GAE/D,MADAC,GAAQ3B,KAAKR,YAAa,0BAA2BkC,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,eAChFJ,EAAWG,IAAIkB,EAAK,UACtBC,EAAQpC,OAAOC,YAAa,iCAAkCD,MAAOmC,EAAInC,MAAOmC,IAAKA,EAAKjC,KAAM,SAAUgB,IAAK,eACxGY,QAAQE,OAAOG,EAAInC,QAErBmC,GACN,SAACD,GAEF,MADAE,GAAQpC,OAAOC,YAAa,4BAA6BD,MAAOkC,EAAKhC,KAAM,SAAUgB,IAAK,eACnFY,QAAQE,OAAOE,QDsO1BrD,IAAK,SACLlC,MCjOM,SAAC8J,GACL,MAAO,IAAIhD,GAAQC,OAAO+C,MDgP5B5H,IAAK,QACLlC,MCpOK,SAAC8J,GACJ,MAAO,IAAIhD,GAAQE,MAAM8C,MD2O3B5H,IAAK,cACLlC,MCvOW,SAAC8J,GACV,MAAO,IAAIhD,GAAQG,YAAY6C,MD8OjC5H,IAAK,eACLlC,MC1OY,SAAC8J,GACX,MAAO,IAAIhD,GAAQI,aAAa4C,MDiPlC5H,IAAK,OACLlC,MC7OI,SAAC8J,GACH,MAAO,IAAIhD,GAAQK,KAAK2C,MDoP1B5H,IAAK,cACLlC,MChPW,SAAC8J,GACV,MAAO,IAAIhD,GAAQM,YAAY0C,MDuPjC5H,IAAK,gBACLlC,MCnPa,SAAC8J,GACZ,MAAO,IAAIhD,GAAQO,cAAcyC,MD0PnC5H,IAAK,gBACLlC,MCtPa,SAAC8J,GACZ,MAAO,IAAIhD,GAAQQ,cAAcwC,MD6PnC5H,IAAK,QACLlC,MCzPK,SAAC8J,GACJ,MAAO,IAAIhD,GAAQS,MAAMuC,MDgQ3B5H,IAAK,WACLlC,MC5PQ,SAAC8J,GACP,MAAO,IAAIhD,GAAQU,SAASsC,MDmQ9B5H,IAAK,SACLlC,MC/PM,SAAC8J,GACL,MAAO,IAAIhD,GAAQW,OAAOqC,MDsQ5B5H,IAAK,gBACLlC,MClQa,SAAC8J,GACZ,MAAO,IAAIhD,GAAQY,cAAcoC,OAnN/BlH,IAuNN,OAAOA","file":"authrocket.min.js","sourcesContent":[null,"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('superagent')) :\n\ttypeof define === 'function' && define.amd ? define(['lodash', 'superagent'], factory) :\n\tglobal.AuthRocket = factory(global._,global.superagent);\n}(this, function (_,superagent) { 'use strict';\n\n\tvar ___default = 'default' in _ ? _['default'] : _;\n\tsuperagent = 'default' in superagent ? superagent['default'] : superagent;\n\n\tvar Actions = {\n\t\tget Realms () { return Realms; },\n\t\tget Users () { return Users; },\n\t\tget Credentials () { return Credentials; },\n\t\tget SignupTokens () { return SignupTokens; },\n\t\tget Orgs () { return Orgs; },\n\t\tget Memberships () { return Memberships; },\n\t\tget AuthProviders () { return AuthProviders; },\n\t\tget ConnectedApps () { return ConnectedApps; },\n\t\tget Hooks () { return Hooks; },\n\t\tget Sessions () { return Sessions; },\n\t\tget Events () { return Events; },\n\t\tget Notifications () { return Notifications; }\n\t};\n\n\tlet defaultConfig = {\n\t\taccountId: process.env.AUTHROCKET_ACCOUNT_ID,\n\t\tapiKey: process.env.AUTHROCKET_API_KEY,\n\t\trealmId: process.env.AUTHROCKET_REALM_ID,\n\t\tjwtSecret: process.env.AUTHROCKET_JWT_SECRET,\n\t  apiUrl: process.env.AUTHROCKET_API_URL  || 'https://api-e1.authrocket.com/v1/',\n\t  jsUrl: process.env.AUTHROCKET_JS_URL\n\t};\n\tlet configInstance = null; //Singleton variable\n\tclass Config {\n\t\tconstructor() {\n\t\t\tif (!configInstance) {\n\t      configInstance = this;\n\t    }\n\t\t\tconsole.log({description: 'Config object created.', config: _.merge(this, defaultConfig), func: 'constructor', obj: 'Config'});\n\t\t\treturn _.merge(configInstance, defaultConfig);\n\t\t}\n\t  applySettings(settingsData) {\n\t    _.each(_.keys(settingsData), (key) => {\n\t      this[key] = settingsData[key];\n\t    });\n\t  }\n\t  //Map getters that handle removing trailing slash of urls\n\t  get urls() {\n\t    let jsUrl = this.jsUrl;\n\t    let apiUrl = this.apiUrl;\n\t    return {\n\t      get api() {\n\t        return apiUrl ? removeTrailingSlash(apiUrl) : null;\n\t      },\n\t      get js() {\n\t        return jsUrl ? removeTrailingSlash(jsUrl) : null;\n\t      }\n\t    };\n\t  }\n\t}\n\tlet config = new Config();\n\n\tfunction removeTrailingSlash(url) {\n\t  if (!_.isString(url)) {\n\t    logger.error({description: 'Slash can only be removed from strings.', func: 'removeTrailingSlash', file: 'config'});\n\t    return url;\n\t  }\n\t  return url.replace(/\\/$/, '');\n\t}\n\n\t//Set default log level to debug\n\tlet logLevel = 'debug';\n\t//Set log level from config\n\tif (config.logLevel) {\n\t\tlogLevel = config.logLevel;\n\t}\n\tlet _logger = {\n\t\tlog(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t}\n\t\t},\n\t\tinfo(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t}\n\t\t},\n\t\twarn(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t}\n\t\t},\n\t\tdebug(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\t// runConsoleMethod('debug', msgArgs);\n\t\t\t\t//Do not display console debugs in production\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('debug', msgArgs);\n\t\t\t}\n\t\t},\n\t\terror(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\t//TODO: Log to external logger\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction runConsoleMethod(methodName, methodData) {\n\t\t//Safley run console methods or use console log\n\t\tif (methodName && console[methodName]) {\n\t\t\treturn console[methodName].apply(console, methodData);\n\t\t} else {\n\t\t\treturn console.log.apply(console, methodData);\n\t\t}\n\t}\n\tfunction buildMessageArgs(logData) {\n\t\tvar msgStr = '';\n\t\tvar msgObj = {};\n\t\t//TODO: Attach time stamp\n\t\t//Attach location information to the beginning of message\n\t\tif (___default.isObject(logData)) {\n\t\t\tif (logLevel == 'debug') {\n\t\t\t\tif (___default.has(logData, 'func')) {\n\t\t\t\t\tif (___default.has(logData, 'obj')) {\n\t\t\t\t\t\t//Object and function provided\n\t\t\t\t\t\tmsgStr += `[${logData.obj}.${logData.func}()]\\n `;\n\t\t\t\t\t} else if (___default.has(logData, 'file')) {\n\t\t\t\t\t\tmsgStr += `[${logData.file} > ${logData.func}()]\\n `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgStr += `[${logData.func}()]\\n `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//Print each key and its value other than obj and func\n\t\t\t___default.each(___default.omit(___default.keys(logData)), (key, ind, list) => {\n\t\t\t\tif (key != 'func' && key != 'obj') {\n\t\t\t\t\tif (key == 'description' || key == 'message') {\n\t\t\t\t\t\tmsgStr += logData[key];\n\t\t\t\t\t} else if (___default.isString(logData[key])) {\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Print objects differently\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tmsgStr += '\\n';\n\t\t} else if (___default.isString(logData)) {\n\t\t\tmsgStr = logData;\n\t\t}\n\t\tvar msg = [msgStr, msgObj];\n\n\t\treturn msg;\n\t}\n\n\tlet request = {\n\t\t/** Run get request with provided data\n\t\t * @param {String} endpoint - Endpoint to send request to\n\t\t * @param {Object|String} data - Query data\n\t\t * @param {Boolean} includeHeaders - Whether or not to include auth headers\n\t\t * @return {Promise}\n\t\t */\n\t\tget(endpoint, queryData, includeHeaders) {\n\t\t\tvar req = superagent.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = attachHeaders(req, includeHeaders);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\t/** Run POST request with provided data\n\t\t * @param {String} endpoint - Endpoint to send request to\n\t\t * @param {Object|String} data - Request data\n\t\t * @param {Boolean} includeHeaders - Whether or not to include auth headers\n\t\t * @return {Promise}\n\t\t */\n\t\tpost(endpoint, data, includeHeaders) {\n\t\t\tvar req = superagent.post(endpoint).send(data);\n\t\t\treq = attachHeaders(req, includeHeaders);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\t/** Run PUT request with provided data\n\t\t * @param {String} endpoint - Endpoint to send request to\n\t\t * @param {Object|String} data - Request data\n\t\t * @param {Boolean} includeHeaders - Whether or not to include auth headers\n\t\t * @return {Promise}\n\t\t */\n\t\tput(endpoint, data, includeHeaders) {\n\t\t\tvar req = superagent.put(endpoint, data);\n\t\t\treq = attachHeaders(req, includeHeaders);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\t/** Run DELETE request with provided data\n\t\t * @param {String} endpoint - Endpoint to send request to\n\t\t * @param {Object|String} data - Request data\n\t\t * @param {Boolean} includeHeaders - Whether or not to include auth headers\n\t\t * @return {Promise}\n\t\t */\n\t\tdel(endpoint, data, includeHeaders) {\n\t\t\tvar req = superagent.put(endpoint, data);\n\t\t\treq = attachHeaders(req, includeHeaders);\n\t\t\treturn handleResponse(req);\n\t\t}\n\t};\n\n\t/** Attach headers to request\n\t * @private\n\t */\n\tfunction attachHeaders(req, include) {\n\t\tif (typeof include === 'undefined' || include) {\n\t\t\treturn addAuthRocketHeaders(req);\n\t\t}\n\t\treturn req;\n\t}\n\t/** Wrap response in promise that has error handling\n\t * @private\n\t */\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// logger.log({description: 'Response:', response:res, func:'handleResponse', file: 'request'});\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\t_logger.warn({description: 'Error response.', error: err, func: 'handleResponse'});\n\t\t\t\t\tif (err.status == 401) {\n\t\t\t\t\t\t_logger.warn({description: 'Unauthorized. You must be signed into make this request.', func: 'handleResponse'});\n\t\t\t\t\t}\n\t\t\t\t\tif (err && err.response) {\n\t\t\t\t\t\treturn reject(err.response.text);\n\t\t\t\t\t}\n\t\t\t\t\tif (err && err.errno) {\n\t\t\t\t\t\t// logger.warn({description: 'Does not exist.', error: err, func: 'handleResponse'});\n\t\t\t\t\t\treturn reject(err.errno);\n\t\t\t\t\t}\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t/** Add auth rocket headers to request\n\t * @private\n\t */\n\tfunction addAuthRocketHeaders(req) {\n\t\tlet newReq = req;\n\t\tif (!config.accountId || !config.apiKey || !config.realmId) {\n\t\t\t_logger.error({description: 'AccountId, apiKey, and realmId are required.', func: 'addAuthRocketHeaders'});\n\t\t\treturn req;\n\t\t}\n\t  let headers = {\n\t    'X-Authrocket-Account': config.accountId,\n\t    'X-Authrocket-Api-Key': config.apiKey,\n\t    'X-Authrocket-Realm': config.realmId,\n\t    // 'Accept': 'application/json',\n\t    'Content-Type': 'application/json'\n\t    // 'User-agent': 'https://github.com/prescottprue/authrocket' //To provide AuthRocket a contact\n\t  };\n\t\t_logger.log({description: 'addAuthRocketHeaders called.', config: config});\n\t\t//Add each header to the request\n\t\t_.each(_.keys(headers), (key) => {\n\t\t\tnewReq = addHeaderToReq(req, key, headers[key]);\n\t\t});\n\t\t_logger.log({description: 'addAuthRocketHeaders request created.', func: 'addAuthRocketHeaders'});\n\t\treturn newReq;\n\t}\n\t/** Add header to an existing request\n\t * @private\n\t */\n\tfunction addHeaderToReq(req, headerName, headerVal) {\n\t\tif (!headerName || !headerVal) {\n\t\t\t_logger.error({description: 'Header name and value required to add header to request.', func: 'addHeaderToReq', obj: 'request'});\n\t\t\treturn;\n\t\t}\n\t\t_logger.log({description: 'Header value set.', headerName: headerName, headerVal: headerVal});\n\t\treturn req.set(headerName, headerVal);\n\t}\n\n\tclass Action {\n\t  constructor(actionName, actionData, endpoint) {\n\t    this.name = actionName;\n\t    this.endpoint = endpoint ? endpoint : `${this.name}`;\n\t    this.init(actionData);\n\t  }\n\t  init(actionData) {\n\t    _logger.log({description: 'Init action called.', actionData: actionData, func: 'url', obj: 'Action'});\n\t    this.isList = actionData ? false : true;\n\t    if (!this.isList) {\n\t      this.actionData = actionData;\n\t      if (_.isString(actionData)) { //String username provided\n\t        this.id = this.actionData;\n\t      } else if (_.has(actionData, 'id') || _.has(actionData, 'username')) { //Check for object to have id or username\n\t        this.id = actionData.id ? actionData.id : actionData.username;\n\t      } else {\n\t        _logger.warn({description: 'Invalid action data object.', func: 'constructor', obj: 'Action'});\n\t        this.isList = false;\n\t        // return Promise.reject('Invalid this.actionData');\n\t      }\n\t    }\n\t  }\n\t  get url() {\n\t    let url = this.isList ? `${config.urls.api}/${this.endpoint}` : `${config.urls.api}/${this.endpoint}/${this.id}`;\n\t    _logger.log({description: 'Url created.', url: url, func: 'url', obj: 'Action'});\n\t    return url;\n\t  }\n\t  /** Get\n\t   * @return {Promise}\n\t   */\n\t  get() {\n\t    return request.get(this.url).then((res) => {\n\t      _logger.log({description: 'Get responded successfully.', res: res, func: 'get', obj: 'Action'});\n\t      if (_.has(res, 'error')) {\n\t        _logger.error({description: 'Error in get response.', error: res.error, res: res, func: 'get', obj: 'Action'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      return res.collection ? res.collection : res;\n\t    }, (error) => {\n\t      _logger.error({description: 'Error in GET request.', error: error, func: 'get', obj: 'Action'});\n\t      return Promise.reject(error);\n\t    });\n\t  }\n\t  /** Add a new user\n\t   * @param {Object} newData - Object containing data to create with\n\t   * @return {Promise}\n\t   */\n\t  add(newData) {\n\t    return request.post(this.url, newData).then((res) => {\n\t      _logger.log({description: 'Add request responded successfully.', res: res, func: 'add', obj: 'Action'});\n\t      if (_.has(res, 'error')) {\n\t        _logger.error({description: 'Error creating new user.', error: res.error, res: res, func: 'add', obj: 'Action'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      _logger.log({description: 'Add successful.', res: res, func: 'add', obj: 'Action'});\n\t      return res;\n\t    }, (err) => {\n\t      _logger.error({description: 'Error creating new user.', error: err, func: 'add', obj: 'Action'});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  update(updateData) {\n\t    return request.put(this.url, updateData).then((res) => {\n\t      if (_.has(res, 'error')) {\n\t        _logger.error({description: 'Error in update request.', error: res.error, res: res, func: 'update', obj: 'Action'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      _logger.log({description: 'Update successful.', res: res, func: 'update', obj: 'Action'});\n\t      return res;\n\t    }, (err) => {\n\t      _logger.error({description: 'Error in update request.', error: err, func: 'update', obj: 'Action'});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Remove\n\t   * @return {Promise}\n\t   */\n\t  remove() {\n\t    return request.del(this.url).then((res) => {\n\t      if (_.has(res, 'error')) {\n\t        _logger.error({description: 'Error in request for removal.', error: res.error, res: res, func: 'remove', obj: 'Action'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      _logger.log({description: 'Remove successfully.', res: res, func: 'remove', obj: 'Action'});\n\t      return res;\n\t    }, (err) => {\n\t      _logger.error({description: 'Error in request for removal.', error: err, func: 'remove', obj: 'Action'});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t}\n\n\tclass Realms extends Action {\n\t  constructor(actionData) {\n\t    super('realms', actionData);\n\t  }\n\t  /** Get realms\n\t   * @return {Promise}\n\t   * @example\n\t   * //list realms\n\t   * authrocket.Realms().get().then(function(realmsList){\n\t   *    console.log('List of realms', realmsList);\n\t   * });\n\t   */\n\t   /** Get a specific realm\n\t    * @param {String} token - String JWT token of logged in user\n\t    * @return {Promise}\n\t    * @example\n\t    * //Realms based on token\n\t    * var realmId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t    * authrocket.Realms(realmId).then(function(realm){\n\t    *    console.log('Realm data:', realm);\n\t    * });\n\t    */\n\t    /** Add a realm\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * var realmData = {name: 'Test Realm'};\n\t     * authrocket.Realms().add(realmData).then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t    /** Update a realm\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * authrocket.Realms().update().then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t     /** Remove a realm\n\t      * @param {String} id - Realm Id\n\t      * @return {Promise}\n\t      * @example\n\t      * var realmId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t      * authrocket.Realms(realmId).remove().then(function(){\n\t      *    console.log('Realm removed successfully.');\n\t      * });\n\t      */\n\t}\n\tclass Users extends Action {\n\t  constructor(actionData) {\n\t    super('users', actionData);\n\t  }\n\t  /** Get realms\n\t   * @return {Promise}\n\t   * @example\n\t   * //list realms\n\t   * authrocket.Users().get().then(function(realmsList){\n\t   *    console.log('List of realms', realmsList);\n\t   * });\n\t   */\n\t   /** Get a specific realm\n\t    * @param {String} token - String JWT token of logged in user\n\t    * @return {Promise}\n\t    * @example\n\t    * //Users based on token\n\t    * var realmId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t    * authrocket.Users(realmId).then(function(realm){\n\t    *    console.log('Realm data:', realm);\n\t    * });\n\t    */\n\t    /** Add a realm\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * var realmData = {name: 'Test Realm'};\n\t     * authrocket.Users().add(realmData).then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t    /** Update a realm\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * authrocket.Users().update().then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t     /** Remove a realm\n\t      * @param {String} id - Realm Id\n\t      * @return {Promise}\n\t      * @example\n\t      * var realmId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t      * authrocket.Users(realmId).remove().then(function(){\n\t      *    console.log('Realm removed successfully.');\n\t      * });\n\t      */\n\t}\n\tclass Credentials extends Action {\n\t  constructor(actionData) {\n\t    super('credentials', actionData);\n\t  }\n\t  /** Get Users\n\t   * @return {Promise}\n\t   * @example\n\t   * authrocket.Users().get().then(function(UsersList){\n\t   *    console.log('List of Users', UsersList);\n\t   * });\n\t   */\n\t   /** Get a specific realm\n\t    * @param {String} token - String JWT token of logged in user\n\t    * @return {Promise}\n\t    * @example\n\t    * //Realms based on token\n\t    * var userId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t    * authrocket.Users(userId).then(function(user){\n\t    *    console.log('Realm data:', user);\n\t    * });\n\t    */\n\t    /** Add a user\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * var userData = {name: 'Test Realm'};\n\t     * authrocket.Users().add(userData).then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t    /** Update a user\n\t     * @param {String} token - String JWT token of logged in user\n\t     * @return {Promise}\n\t     * @example\n\t     * authrocket.Users().update().then(function(){\n\t     *    console.log('Logged out successfully.');\n\t     * });\n\t     */\n\t     /** Remove a Realm\n\t      * @param {String} id - Realm Id\n\t      * @return {Promise}\n\t      * @example\n\t      * var username = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t      * authrocket.Users(username).remove().then(function(){\n\t      *    console.log('Realm removed successfully.');\n\t      * });\n\t      */\n\t}\n\tclass SignupTokens extends Action {\n\t  constructor(actionData) {\n\t    super('signup_tokens', actionData);\n\t  }\n\t  /** Get SignupTokens\n\t   * @return {Promise}\n\t   * @example\n\t   * authrocket.SignupTokens().get().then(function(usersList){\n\t   *    console.log('List of realms', realmsList);\n\t   * });\n\t   */\n\t  /** Get a specific Signup Token\n\t   * @return {Promise}\n\t   * @example\n\t   * //SignupTokens based on token\n\t   * var signupTokenId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t   * authrocket.SignupTokens(signupTokenId).then(function(signupToken){\n\t   *    console.log('Realm data:', signupToken);\n\t   * });\n\t   */\n\t  /** Add a Signup Token\n\t   * @param {Object}  - Signup Token data\n\t   * @return {Promise}\n\t   * @example\n\t   * var signupTokenData = {name: 'Test Realm'};\n\t   * authrocket.SignupTokens().add(signupTokenData).then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  /** Update a signupToken\n\t   * @return {Promise}\n\t   * @example\n\t   * authrocket.SignupTokens().update().then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  /** Remove a signupToken\n\t   * @param {String} id - Realm Id\n\t   * @return {Promise}\n\t   * @example\n\t   * var signupToken = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t   * authrocket.SignupTokens(signupToken).remove().then(function(){\n\t   *    console.log('Realm removed successfully.');\n\t   * });\n\t   */\n\t}\n\tclass Orgs extends Action {\n\t  constructor(actionData) {\n\t    super('orgs', actionData);\n\t  }\n\t  /** Get Orgs\n\t   * @return {Promise}\n\t   * @example\n\t   * //list Orgs\n\t   * authrocket.Realms().get().then(function(OrgsList){\n\t   *    console.log('List of Orgs', OrgsList);\n\t   * });\n\t   */\n\t  /** Get a specific org\n\t   * @param {String} name - Name or id of organization\n\t   * @return {Promise}\n\t   * @example\n\t   * var orgId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t   * authrocket.Realms(orgId).then(function(org){\n\t   *    console.log('Realm data:', org);\n\t   * });\n\t   */\n\t  /** Add a org\n\t   * @param {Object} orgData - Data associated with organization\n\t   * @param {String} name - Name of org\n\t   * @return {Promise}\n\t   * @example\n\t   * var orgData = {name: 'Admins'};\n\t   * authrocket.Realms().add(orgData).then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  /** Update a org\n\t   * @return {Promise}\n\t   * @example\n\t   * authrocket.Realms().update().then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  /** Remove a org\n\t   * @param {String} id - Org Id\n\t   * @return {Promise}\n\t   * @example\n\t   * var orgId = 'rl_0v1zTHXhtNgmDaXaDYSAqx';\n\t   * authrocket.Realms(orgId).remove().then(function(){\n\t   *    console.log('Realm removed successfully.');\n\t   * });\n\t   */\n\t}\n\tclass Memberships extends Action {\n\t  constructor(actionData) {\n\t    super('memberships', actionData);\n\t  }\n\t}\n\tclass AuthProviders extends Action {\n\t  constructor(actionData) {\n\t    super('auth_providers', actionData);\n\t  }\n\t}\n\tclass ConnectedApps extends Action {\n\t  constructor(actionData) {\n\t    super('login_policies', actionData);\n\t  }\n\t}\n\tclass Hooks extends Action {\n\t  constructor(actionData) {\n\t    super('app_hooks', actionData);\n\t  }\n\t}\n\tclass Sessions extends Action {\n\t  constructor(actionData) {\n\t    super('session', actionData);\n\t  }\n\t}\n\n\tclass Events extends Action {\n\t  constructor(actionData) {\n\t    super('events', actionData);\n\t  }\n\t}\n\tclass Notifications extends Action {\n\t  constructor(actionData) {\n\t    super('notifications', actionData);\n\t  }\n\t}\n\n\tclass AuthRocket {\n\t  constructor(settings) {\n\t    if (settings && ___default.isString(settings)) {\n\t      this.apiUrl = settings;\n\t    } else {\n\t      //Set api url if within settings\n\t      config.applySettings(settings);\n\t    }\n\t  }\n\t  /** Login as a user\n\t   * @param {Object} loginData - Object containing data to signup with\n\t   * @param {String} loginData.email - Email of new user\n\t   * @param {String} loginData.username - Username of new user\n\t   * @param {String} loginData.password - Password of new user\n\t   * @return {Promise}\n\t   * @example\n\t   * //login as a user\n\t   * var userData = {username: 'testuser1', password: 'secretstring'};\n\t   * authrocket.login(userData).then(function(newUser){\n\t   *    console.log('Successful signup:', newUser);\n\t   * });\n\t   */\n\t  login(loginData) {\n\t    if (!___default.has(loginData, 'username') || !___default.has(loginData, 'password')) {\n\t      _logger.error({description: 'Username and password are required to login.', func: 'login', obj: 'AuthRocket'});\n\t      return Promise.reject('Username/Email and password are required.');\n\t    }\n\t    _logger.log({description: 'Calling login.', url: `${config.urls.js}/login`, loginData: loginData, func: 'login', obj: 'AuthRocket'});\n\t    return request.post(`${config.urls.js}/login`, loginData, false).then((res) => {\n\t      if (___default.has(res, 'error')) {\n\t        _logger.error({description: 'Error logging in.', error: res.error, res: res, func: 'login', obj: 'AuthRocket'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      if (___default.has(res, 'errno')) {\n\t        let error = res.errno;\n\t        let description = 'Error logging in.';\n\t        if (error === 'ENOTFOUND') {\n\t            error = 'User not found.';\n\t            description = error;\n\t        }\n\t        _logger.error({description: error, error: res.errno, res: res, func: 'login', obj: 'AuthRocket'});\n\t        return Promise.reject(error);\n\t      }\n\t      return res;\n\t    }, (err) => {\n\t      _logger.error({description: 'Error logging in.', error: err, func: 'login', obj: 'AuthRocket'});\n\t      if (err === 'ENOTFOUND') {\n\t        err = 'User not found.';\n\t      }\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Logout a user\n\t   * @param {String} token - String JWT token of logged in user\n\t   * @return {Promise}\n\t   * @example\n\t   * //logout based on token\n\t   * var token = 'b89787f98728rcn8279.898er89qb8bsf.98basdfasd';\n\t   * authrocket.logout(token).then(function(){\n\t   *    console.log('Logged out successfully.');\n\t   * });\n\t   */\n\t  logout(token) {\n\t    if (!token || !___default.isString(token)) {\n\t      _logger.error({description: 'Token string is required to logout.', func: 'logout', obj: 'AuthRocket'});\n\t      return Promise.reject('Valid token is required to logout.');\n\t    }\n\t    return request.post(`${config.urls.js}/logout`, {token: token}, false).then((res) => {\n\t      if (___default.has(res, 'error') || ___default.has(res, 'errno')) {\n\t        _logger.error({description: 'Error logging out.', error: res.error || res.errno, res: res, func: 'logout', obj: 'AuthRocket'});\n\t        return Promise.reject(res.error || res.errno);\n\t      }\n\t      _logger.log({description: 'Successful logout.', res: res, func: 'logout', obj: 'AuthRocket'});\n\t      return res;\n\t    }, (err) => {\n\t      _logger.error({description: 'Error logging out.', error: err});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Signup a new user\n\t   * @param {Object} signupData - Object containing data to signup with\n\t   * @param {String} signupData.email - Email of new user\n\t   * @param {String} signupData.password - Password of new user\n\t   * @param {String} signupData.confirm - Object containing data to signup with\n\t   * @return {Promise}\n\t   * @example\n\t   * //signup\n\t   * var userData = {username: 'testuser1', email: 'test@test.com', password: 'secretstring'};\n\t   * authrocket.signup(userData).then(function(newUser){\n\t   *    console.log('Successful signup:', newUser);\n\t   * });\n\t   */\n\t  signup(signupData) {\n\t    if ((!___default.has(signupData, 'username') && !___default.has(signupData, 'email')) || !___default.has(signupData, 'username')) {\n\t      _logger.error({description: 'Username/Email and password are required to login.', func: 'login', obj: 'AuthRocket'});\n\t      return Promise.reject('Username/Email and password are required.');\n\t    }\n\t    return request.post(`${config.urls.js}/signup`, signupData).then((res) => {\n\t      if (___default.has(res, 'error') || ___default.has(res, 'errno')) {\n\t        _logger.error({description: 'Error signing up.', error: res.error || res.errno, res: res, func: 'signup', obj: 'AuthRocket'});\n\t        return Promise.reject(res.error || res.errno);\n\t      }\n\t      _logger.log({description: 'Successful signup', res: res, func: 'signup', obj: 'AuthRocket'});\n\t      return res;\n\t    }, (err) => {\n\t      _logger.error({description: 'Error signing up.', error: err, func: 'signup', obj: 'AuthRocket'});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Verify an existing token is valid\n\t   * @param {String} token - JSON Web Token to verify\n\t   * @param {String} expand - Values to expand (memberships and/or token)\n\t   * @return {Promise}\n\t   * @example\n\t   * //verify token and return membership and token data\n\t   * var token = 'b89787f98728rcn8279.898er89qb8bsf.98basdfasd';\n\t   * authrocket.verify(token , 'memberships,token').then(function(response){\n\t   *    console.log('token is valid. User data:', response);\n\t   * });\n\t   */\n\t  verify(token) {\n\t    return request.get(`${config.urls.api}/sessions/${token}`).then((res) => {\n\t      _logger.log({description: 'Token/Session is valid.', res: res, func: 'verify', obj: 'AuthRocket'});\n\t      if (___default.has(res, 'error')) {\n\t        _logger.error({description: 'Error verifying token/session.', error: res.error, res: res, func: 'verify', obj: 'AuthRocket'});\n\t        return Promise.reject(res.error);\n\t      }\n\t      return res;\n\t    }, (err) => {\n\t      _logger.error({description: 'Token/Session is invalid.', error: err, func: 'verify', obj: 'AuthRocket'});\n\t      return Promise.reject(err);\n\t    });\n\t  }\n\t  /** Realms action namespace\n\t   *\n\t   */\n\t  Realms(actionData) {\n\t    return new Actions.Realms(actionData);\n\t  }\n\t  /** Users action namespace\n\t   * @example\n\t   * //Get users list\n\t   * authrocket.Users().get().then(function(loadedUser){\n\t   *  console.log('User found:', loadedUser);\n\t   * });\n\t   * //Get user by username\n\t   * authrocket.User('someguy1').get().then(function(loadedUser){\n\t   *  console.log('User found:', loadedUser);\n\t   * });\n\t   */\n\t  Users(actionData) {\n\t    return new Actions.Users(actionData);\n\t  }\n\t  /** Credentials action namespace\n\t   *\n\t   */\n\t  Credentials(actionData) {\n\t    return new Actions.Credentials(actionData);\n\t  }\n\t  /** SignupTokens action namespace\n\t   *\n\t   */\n\t  SignupTokens(actionData) {\n\t    return new Actions.SignupTokens(actionData);\n\t  }\n\t  /** Orgs action namespace\n\t   *\n\t   */\n\t  Orgs(actionData) {\n\t    return new Actions.Orgs(actionData);\n\t  }\n\t  /** Memberships action namespace\n\t   *\n\t   */\n\t  Memberships(actionData) {\n\t    return new Actions.Memberships(actionData);\n\t  }\n\t  /** AuthProviders action namespace\n\t   *\n\t   */\n\t  AuthProviders(actionData) {\n\t    return new Actions.AuthProviders(actionData);\n\t  }\n\t  /** ConnectedApps action namespace\n\t   *\n\t   */\n\t  ConnectedApps(actionData) {\n\t    return new Actions.ConnectedApps(actionData);\n\t  }\n\t  /** Hooks action namespace\n\t   *\n\t   */\n\t  Hooks(actionData) {\n\t    return new Actions.Hooks(actionData);\n\t  }\n\t  /** Sessions action namespace\n\t   *\n\t   */\n\t  Sessions(actionData) {\n\t    return new Actions.Sessions(actionData);\n\t  }\n\t  /** Events action namespace\n\t   *\n\t   */\n\t  Events(actionData) {\n\t    return new Actions.Events(actionData);\n\t  }\n\t  /** Notifications action namespace\n\t   *\n\t   */\n\t  Notifications(actionData) {\n\t    return new Actions.Notifications(actionData);\n\t  }\n\t}\n\n\treturn AuthRocket;\n\n}));"],"sourceRoot":"/source/"}