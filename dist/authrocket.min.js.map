{"version":3,"sources":["authrocket.min.js","/source/authrocket.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","AuthRocket","_","superagent","this","runConsoleMethod","methodName","methodData","console","apply","log","buildMessageArgs","logData","msgStr","msgObj","___default","isObject","logLevel","has","obj","func","file","each","omit","keys","ind","list","isString","msg","handleResponse","req","Promise","resolve","reject","end","err","res","status","logger","warn","description","response","text","error","body","defaultConfig","envName","accountId","process","env","AUTHROCKET_ACCOUNT_ID","apiKey","AUTHROCKET_API_KEY","realmId","AUTHROCKET_REALM_ID","jwtSecret","AUTHROCKET_JWT_SECRET","urls","api","AUTHROCKET_API_URL","login","AUTHROCKET_LOGIN_URL","signup","AUTHROCKET_SIGNUP_URL","jslib","AUTHROCKET_JSLIB_URL","Config","merge","config","msgArgs","info","debug","request","get","endpoint","queryData","query","post","data","send","put","del","settings","apiUrl","jsApiUrl","signupUrl","value","loginData","requestWithHeaders","then","token","signupData","url"],"mappings":"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","file":"authrocket.min.js","sourcesContent":[null,"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('superagent')) :\n  typeof define === 'function' && define.amd ? define(['lodash', 'superagent'], factory) :\n  global.AuthRocket = factory(global._,global.superagent);\n}(this, function (_,superagent) { 'use strict';\n\n  var ___default = 'default' in _ ? _['default'] : _;\n  superagent = 'default' in superagent ? superagent['default'] : superagent;\n\n  let defaultConfig = {\n  \tenvName: 'local',\n  \taccountId: process.env.AUTHROCKET_ACCOUNT_ID,\n  \tapiKey: process.env.AUTHROCKET_API_KEY,\n  \trealmId: process.env.AUTHROCKET_REALM_ID,\n  \tjwtSecret: process.env.AUTHROCKET_JWT_SECRET,\n  \turls: {\n  \t\tapi: process.env.AUTHROCKET_API_URL  || 'https://api-e1.authrocket.com/v1/',\n  \t\tlogin: process.env.AUTHROCKET_LOGIN_URL,\n  \t\tsignup: process.env.AUTHROCKET_SIGNUP_URL,\n  \t\tjslib: process.env.AUTHROCKET_JSLIB_URL\n  \t}\n  };\n  let instance = null;\n  class Config {\n  \tconstructor() {\n  \t\tif (!instance) {\n        instance = this;\n      }\n  \t\t// console.log({description: 'Config object created.', config: merge(this, defaultConfig), func: 'constructor', obj: 'Config'});\n  \t\treturn _.merge(instance, defaultConfig);\n  \t}\n  \t// get logLevel() {\n  \t// \treturn defaultConfig.envs[envName].logLevel;\n  \t// }\n  \t// set envName(newEnv) {\n  \t// \tenvName = newEnv;\n  \t// \t// this.envName = newEnv;\n  \t// \t// console.log('Environment name set:', envName);\n  \t// }\n  \t// get env() {\n  \t// \treturn defaultConfig.envs[envName];\n  \t// }\n  }\n  let config = new Config();\n\n  //Set default log level to debug\n  let logLevel = 'debug';\n  //Set log level from config\n  if (config.logLevel) {\n  \tlogLevel = config.logLevel;\n  }\n  let logger = {\n  \tlog(logData) {\n  \t\tlet msgArgs = buildMessageArgs(logData);\n  \t\tif (config.envName == 'production') {\n  \t\t\trunConsoleMethod('log', msgArgs);\n  \t\t} else {\n  \t\t\trunConsoleMethod('log', msgArgs);\n  \t\t}\n  \t},\n  \tinfo(logData) {\n  \t\tlet msgArgs = buildMessageArgs(logData);\n  \t\tif (config.envName == 'production') {\n  \t\t\trunConsoleMethod('info', msgArgs);\n  \t\t} else {\n  \t\t\trunConsoleMethod('info', msgArgs);\n  \t\t}\n  \t},\n  \twarn(logData) {\n  \t\tlet msgArgs = buildMessageArgs(logData);\n  \t\tif (config.envName == 'production') {\n  \t\t\trunConsoleMethod('warn', msgArgs);\n  \t\t} else {\n  \t\t\trunConsoleMethod('warn', msgArgs);\n  \t\t}\n  \t},\n  \tdebug(logData) {\n  \t\tlet msgArgs = buildMessageArgs(logData);\n  \t\tif (config.envName == 'production') {\n  \t\t\t// runConsoleMethod('debug', msgArgs);\n  \t\t\t//Do not display console debugs in production\n  \t\t} else {\n  \t\t\trunConsoleMethod('debug', msgArgs);\n  \t\t}\n  \t},\n  \terror(logData) {\n  \t\tlet msgArgs = buildMessageArgs(logData);\n  \t\tif (config.envName == 'production') {\n  \t\t\t//TODO: Log to external logger\n  \t\t\trunConsoleMethod('error', msgArgs);\n  \t\t} else {\n  \t\t\trunConsoleMethod('error', msgArgs);\n  \t\t}\n  \t}\n  };\n\n  function runConsoleMethod(methodName, methodData) {\n  \t//Safley run console methods or use console log\n  \tif (methodName && console[methodName]) {\n  \t\treturn console[methodName].apply(console, methodData);\n  \t} else {\n  \t\treturn console.log.apply(console, methodData);\n  \t}\n  }\n  function buildMessageArgs(logData) {\n  \tvar msgStr = '';\n  \tvar msgObj = {};\n  \t//TODO: Attach time stamp\n  \t//Attach location information to the beginning of message\n  \tif (___default.isObject(logData)) {\n  \t\tif (logLevel == 'debug') {\n  \t\t\tif (___default.has(logData, 'func')) {\n  \t\t\t\tif (___default.has(logData, 'obj')) {\n  \t\t\t\t\t//Object and function provided\n  \t\t\t\t\tmsgStr += `[${logData.obj}.${logData.func}()]\\n `;\n  \t\t\t\t} else if (___default.has(logData, 'file')) {\n  \t\t\t\t\tmsgStr += `[${logData.file} > ${logData.func}()]\\n `;\n  \t\t\t\t} else {\n  \t\t\t\t\tmsgStr += `[${logData.func}()]\\n `;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\t//Print each key and its value other than obj and func\n  \t\t___default.each(___default.omit(___default.keys(logData)), (key, ind, list) => {\n  \t\t\tif (key != 'func' && key != 'obj') {\n  \t\t\t\tif (key == 'description' || key == 'message') {\n  \t\t\t\t\tmsgStr += logData[key];\n  \t\t\t\t} else if (___default.isString(logData[key])) {\n  \t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n  \t\t\t\t\tmsgObj[key] = logData[key];\n  \t\t\t\t} else {\n  \t\t\t\t\t//Print objects differently\n  \t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n  \t\t\t\t\tmsgObj[key] = logData[key];\n  \t\t\t\t}\n  \t\t\t}\n  \t\t});\n  \t\tmsgStr += '\\n';\n  \t} else if (___default.isString(logData)) {\n  \t\tmsgStr = logData;\n  \t}\n  \tvar msg = [msgStr, msgObj];\n\n  \treturn msg;\n  }\n\n  let request = {\n  \tget(endpoint, queryData) {\n  \t\tvar req = superagent.get(endpoint);\n  \t\tif (queryData) {\n  \t\t\treq.query(queryData);\n  \t\t}\n  \t\t// req = addAuthHeader(req);\n  \t\treturn handleResponse(req);\n  \t},\n  \tpost(endpoint, data) {\n  \t\tvar req = superagent.post(endpoint).send(data);\n  \t\t// req = addAuthHeader(req);\n  \t\treturn handleResponse(req);\n  \t},\n  \tput(endpoint, data) {\n  \t\tvar req = superagent.put(endpoint, data);\n  \t\t// req = addAuthHeader(req);\n  \t\treturn handleResponse(req);\n  \t},\n  \tdel(endpoint, data) {\n  \t\tvar req = superagent.put(endpoint, data);\n  \t\t// req = addAuthHeader(req);\n  \t\treturn handleResponse(req);\n  \t}\n  };\n\n  function handleResponse(req) {\n  \treturn new Promise((resolve, reject) => {\n  \t\treq.end((err, res) => {\n  \t\t\tif (!err) {\n  \t\t\t\t// logger.log({description: 'Response:', response:res, func:'handleResponse', file: 'request'});\n  \t\t\t\treturn resolve(res.body);\n  \t\t\t} else {\n  \t\t\t\tif (err.status == 401) {\n  \t\t\t\t\tlogger.warn({description: 'Unauthorized. You must be signed into make this request.', func: 'handleResponse'});\n  \t\t\t\t}\n  \t\t\t\tif (err && err.response) {\n  \t\t\t\t\treturn reject(err.response.text);\n  \t\t\t\t}\n  \t\t\t\tlogger.warn({description: 'Error response.', error: err, func: 'handleResponse'});\n  \t\t\t\treturn reject(err);\n  \t\t\t}\n  \t\t});\n  \t});\n  }\n\n  class AuthRocket {\n    constructor(settings) {\n      if (settings && ___default.isString(settings)) {\n        this.apiUrl = settings;\n      } else {\n        //Set api url if within settings\n        this.apiUrl = ___default.has(settings, 'apiUrl') ? settings.apiUrl : config.urls.api;\n        this.apiKey = ___default.has(settings, 'apiKey') ? settings.apiKey : config.apiKey;\n        this.accountId = ___default.has(settings, 'accountId') ? settings.accountId : config.accountId;\n        this.realmId = ___default.has(settings, 'realmId') ? settings.realmId : config.realmId;\n        this.jsApiUrl = ___default.has(settings, 'jsApiUrl') ? settings.urls.jslib : config.urls.jslib;\n        this.signupUrl = ___default.has(settings, 'signupUrl') ? settings.urls.signup : config.urls.signup || config.urls.api;\n      }\n    }\n    /** Login as a user\n     * @param {Object} loginData - Object containing data to signup with\n     * @param {String} loginData.email - Email of new user\n     * @param {String} loginData.password - Password of new user\n     * @return {Promise}\n     */\n    login(loginData) {\n      return this.requestWithHeaders('login', loginData).then((res) => {\n        console.log('successful login', res);\n        //TODO: Handle error response\n        return res;\n      }, (error) => {\n        console.error('Error logging in.', error);\n        return Promise.reject(error);\n      });\n    }\n    /** Logout a user\n     * @param {Object} token - Object containing data to signup with\n     * @return {Promise}\n     */\n    logout(token) {\n      return this.requestWithHeaders('logout', {token: token}).then((res) => {\n        console.log('successful logout', res);\n        //TODO: Handle error response\n        return res;\n      }, (error) => {\n        console.error('Error logging out.', error);\n        return Promise.reject(error);\n      });\n    }\n    /** Signup a new user\n     * @param {Object} signupData - Object containing data to signup with\n     * @param {String} signupData.email - Email of new user\n     * @param {String} signupData.password - Password of new user\n     * @param {String} signupData.confirm - Object containing data to signup with\n     * @return {Promise}\n     */\n    signup(signupData) {\n      return request.post(`${this.jsApiUrl}signup`, signupData).then((res) => {\n        console.log('successful signup', res);\n        //TODO: Handle error response\n        return res;\n      }, (error) => {\n        console.error('Error signing up.', error);\n        return Promise.reject(error);\n      });\n    }\n    /** Verify an existing token is valid\n     * @param {String} token - JSON Web Token to verify\n     * @return {Promise}\n     */\n    verify(token) {\n      return this.requestWithHeaders(`sessions/${token}`).then((res) => {\n        console.log('token is valid', res);\n        return res;\n      }, (err) => {\n        console.error('Token is invalid.', err);\n        return Promise.reject(err);\n      });\n    }\n    /** Attach AuthRocket request headers and make a request\n     * @param {String} endpoint - Endpoint to send request to\n     * @param {Object|String} data - Request data\n     * @return {Promise}\n     */\n     requestWithHeaders(url, data) {\n\n     }\n\n    // requestWithHeaders(url, data) {\n    //   // if (!_.has(this, ['accountId', 'apiKey', 'realmId'])) {\n    //   //   console.error('Account, apiKey, and realm are required to make a request with headers.', JSON.stringify(this));\n    //   //   return Promise.reject({message: 'Account, apiKey, and realm are required to make a request with headers.'});\n    //   // }\n    //   let options = {\n    //     method: 'post', //TODO: Handle other request methods\n    //     headers: {\n    //     //   'X-Authrocket-Account': this.accountId,\n    //     //   'X-Authrocket-Api-Key': this.apiKey,\n    //     //   'X-Authrocket-Realm': this.realmId,\n    //       'Accept': 'application/json',\n    //       'Content-Type': 'application/json',\n    //     //   'User-agent': 'https://github.com/prescottprue/authrocket'\n    //     }\n    //   };\n    //   //Add data to request if it exists\n    //   if (data) {\n    //     options.body = data;\n    //   }\n    //   console.log('requesting with options:',url, options);\n    //   return fetch(url, options).then((res) => {\n    //     if (res.status >= 200 && res.status < 300) {\n    //       if (res.error) {\n    //         return Promise.reject(res.error);\n    //       }\n    //       console.log('response with text:', res.json());\n    //       return res.json();\n    //     } else {\n    //       console.log('error response:', res);\n    //       var error = new Error(res.statusText);\n    //       error.response = res;\n    //       return Promise.reject(res.statusText);\n    //     }\n    //   }).then((text) => {\n    //     console.log('Text response:', text);\n    //     return text;\n    //   });\n    // }\n  }\n\n  return AuthRocket;\n\n}));"],"sourceRoot":"/source/"}